diff --git a/README.md b/README.md
index 288adcf..53c3338 100644
--- a/README.md
+++ b/README.md
@@ -3,7 +3,9 @@ camp
 
 Another Raspberry Pi camera webserver.
 
-![](img/example.png)
+**USE AT YOUR OWN RISK. SEE [#11](https://github.com/patrickfuller/camp/issues/11) FOR MORE.**
+
+![](static/img/example.png)
 
 What it does
 ============
@@ -52,11 +54,11 @@ python camp/server.py
 
 Navigate to http://your.r.pi.ip:8000 and check out your webcam.
 
-#### USB Camera
+### USB Camera
 
 Use with `python server.py --use-usb`.
 
-#### Password
+### Password
 
 ![](img/login.png)
 
@@ -73,10 +75,9 @@ python -c "import hashlib; import getpass; print(hashlib.sha512(getpass.getpass(
 This will prompt you for a password, encrypt it, and save the result in
 `password.txt`.
 
-Note that this level of password protection is basic - it's fine for keeping the
-occasional stranger out, but won't stand up to targeted hacking.
+**Note that this level of password protection is basic.** It's fine for keeping the occasional stranger out but won't stand up to targeted hacking.
 
-#### Run on startup
+### Run on startup
 
 It's nice to have your pi start camp whenever it turns on. Let's make that
 happen. Type `sudo nano /etc/rc.local` to open this file for editing, and add
@@ -84,7 +85,7 @@ the line `nohup python /home/pi/camp/server.py &` before the last line. Note
 that you may need to change the path (`/home/pi/camp/server.py`) to point to
 the right file.
 
-#### Customization
+### Customization
 
 The website consists of `index.html`, `login.html`, and `style.css`. These can be
 edited to change the look of camp.
diff --git a/server.py b/server.py
index 331883f..89dc290 100644
--- a/server.py
+++ b/server.py
@@ -7,7 +7,6 @@
 import hashlib
 import os
 import time
-import threading
 import webbrowser
 
 try:
@@ -42,7 +41,7 @@ def get(self):
 
     def post(self):
         password = self.get_argument("password", "")
-        if hashlib.sha512(password).hexdigest() == PASSWORD:
+        if hashlib.sha512(password.encode()).hexdigest() == PASSWORD:
             self.set_secure_cookie(COOKIE_NAME, str(time.time()))
             self.redirect("/")
         else:
@@ -50,11 +49,6 @@ def post(self):
             self.redirect(u"/login?error")
 
 
-class ErrorHandler(tornado.web.RequestHandler):
-    def get(self):
-        self.send_error(status_code=403)
-
-
 class WebSocket(tornado.websocket.WebSocketHandler):
 
     def on_message(self, message):
@@ -128,9 +122,10 @@ def loop(self):
 
 handlers = [(r"/", IndexHandler), (r"/login", LoginHandler),
             (r"/websocket", WebSocket),
-            (r"/static/password.txt", ErrorHandler),
-            (r'/static/(.*)', tornado.web.StaticFileHandler, {'path': ROOT})]
-application = tornado.web.Application(handlers, cookie_secret=PASSWORD)
+            (r'/static/(.*)', tornado.web.StaticFileHandler, {'path': os.path.join(ROOT, 'static')})]
+
+secret = base64.b64encode(os.urandom(50)).decode('ascii')
+application = tornado.web.Application(handlers, cookie_secret=secret)
 application.listen(args.port)
 
 webbrowser.open("http://localhost:%d/" % args.port, new=2)
diff --git a/client.js b/static/client.js
similarity index 100%
rename from client.js
rename to static/client.js
diff --git a/favicon.ico b/static/favicon.ico
similarity index 100%
rename from favicon.ico
rename to static/favicon.ico
diff --git a/img/example.png b/static/img/example.png
similarity index 100%
rename from img/example.png
rename to static/img/example.png
diff --git a/img/login.png b/static/img/login.png
similarity index 100%
rename from img/login.png
rename to static/img/login.png
diff --git a/img/logo.png b/static/img/logo.png
similarity index 100%
rename from img/logo.png
rename to static/img/logo.png
diff --git a/style.css b/static/style.css
similarity index 100%
rename from style.css
rename to static/style.css
