diff --git a/org.talend.mdm.commons.core/src/com/amalto/commons/core/utils/XMLUtils.java b/org.talend.mdm.commons.core/src/com/amalto/commons/core/utils/XMLUtils.java
index 685590e35d..00e3f00716 100644
--- a/org.talend.mdm.commons.core/src/com/amalto/commons/core/utils/XMLUtils.java
+++ b/org.talend.mdm.commons.core/src/com/amalto/commons/core/utils/XMLUtils.java
@@ -9,14 +9,12 @@
  */
 package com.amalto.commons.core.utils;
 
-import java.io.IOException;
 import java.io.StringReader;
 import java.io.StringWriter;
 
 import javax.xml.XMLConstants;
 import javax.xml.parsers.DocumentBuilder;
 import javax.xml.parsers.DocumentBuilderFactory;
-import javax.xml.parsers.ParserConfigurationException;
 import javax.xml.transform.Transformer;
 import javax.xml.transform.TransformerConfigurationException;
 import javax.xml.transform.TransformerException;
@@ -25,8 +23,8 @@
 import javax.xml.transform.stream.StreamResult;
 import javax.xml.transform.stream.StreamSource;
 
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.dom4j.io.DocumentResult;
 import org.dom4j.io.DocumentSource;
 import org.w3c.dom.DOMImplementation;
@@ -34,8 +32,6 @@
 import org.w3c.dom.Element;
 import org.w3c.dom.Node;
 import org.w3c.dom.NodeList;
-import org.xml.sax.InputSource;
-import org.xml.sax.SAXException;
 
 import com.sun.org.apache.xpath.internal.XPathAPI;
 import com.sun.org.apache.xpath.internal.objects.XObject;
@@ -49,177 +45,29 @@ public final class XMLUtils {
 
     private static final Logger logger = LogManager.getLogger(XMLUtils.class);
 
-    private static final TransformerFactory transformerFactory = TransformerFactory.newInstance();
+    private static final TransformerFactory transformerFactory;
 
     private static final TransformerFactory saxonTransformerFactory = new net.sf.saxon.TransformerFactoryImpl();
 
-	/**
-	 * Parsed an XML String into a {@link Document} without schema vaildation
-	 * @param xmlString
-	 * @return the Document
-	 * @throws ParserConfigurationException,IOException, SAXException
-	 */
-    public static Document parse(String xmlString) throws ParserConfigurationException,IOException, SAXException{
-    	return parse(xmlString,null);
-    }
-
-
-    /**
-     * Parses an XML String into a Document<br>
-     * The thrown Exception will contain validation errors when a schema is provided.
-     * @param xmlString
-     * @param schema - the schema XSD
-     * @return The org.w3c.dom.Document
-     * @throws ParserConfigurationException,IOException, SAXException
-     */
-    public static Document parse(String xmlString, String schema) throws ParserConfigurationException,IOException, SAXException{
-
-		//parse
-		Document d=null;
-		SAXErrorHandler seh = new SAXErrorHandler();
-
-        //initialize the sax parser which uses Xerces
-    	DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
-        factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
-        factory.setFeature("http://xml.org/sax/features/external-general-entities", false);
-        factory.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
-        factory.setExpandEntityReferences(false);
-        factory.setXIncludeAware(false);
-    	//Schema validation based on schemaURL
-    	factory.setNamespaceAware(true);
-    	factory.setValidating((schema!=null));
-    	factory.setAttribute(
-    			"http://java.sun.com/xml/jaxp/properties/schemaLanguage",
-    			"http://www.w3.org/2001/XMLSchema");
-    	if (schema != null) {
-    	    factory.setAttribute(
-    			"http://java.sun.com/xml/jaxp/properties/schemaSource",
-    			new InputSource(new StringReader(schema))
-    			);
-    	}
-    	DocumentBuilder builder;
-    	builder = factory.newDocumentBuilder();
-    	builder.setErrorHandler(seh);
-    	d = builder.parse(new InputSource(new StringReader(xmlString)));
-
-
-		//check if dcument parsed correctly against the schema
-		if (schema != null) {
-			String errors = seh.getErrors();
-			if (!errors.equals("")) {
-				String err = "Document  did not parse against schema: \n" + errors+"\n"
-					+xmlString.substring(0, Math.min(100, xmlString.length()));
-				LogManager.getLogger(XMLUtils.class).error(err);
-				throw new SAXException(err);
-			}
-		}
-		return d;
-    }
-
-
-    /**
-     * Return the String values of the Text Nodes below an xPath
-     * @param contextNode
-     * @param xPath
-     * @return a String Array of the text node values
-     * @throws TransformerException
-     */
-    public static String[] getTextNodes(Node contextNode, String xPath) throws TransformerException{
-    	return getTextNodes(contextNode,xPath,contextNode);
-    }
-
-
-    /**
-     * Return the String values of the Text Nodes below an xPath<br>
-     * Where the xPath contains namespace, a context node holding the namespaces definitions can be provided
-     * @param contextNode
-     * @param xPath
-     * @param namespaceNode
-     * @return a String Array of the text node values
-     * @throws TransformerException
-     */
-    public static String[] getTextNodes(Node contextNode, String xPath,Node namespaceNode) throws TransformerException{
-        String[] results=null;;
-
-        //test for hard-coded values
-        if (xPath.startsWith("\"") && xPath.endsWith("\""))
-            return new String[] { xPath.substring(1, xPath.length()-1)};
-
-        //test for incomplete path (elements missing /text())
-        if (!xPath.matches(".*@[^/\\]]+"))  //attribute
-        	if (! xPath.endsWith(")")) //function
-        		xPath+="/text()";
-
+    static {
+        // the open jdk implementation allows the disabling of the feature used for XXE
+        System.setProperty("javax.xml.transform.TransformerFactory",
+                "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl");
+        transformerFactory = TransformerFactory.newInstance();
         try {
-	        XObject xo = XPathAPI.eval(contextNode, xPath,namespaceNode);
-	        if (xo.getType() == XObject.CLASS_NODESET) {
-	            NodeList l = xo.nodelist();
-	            int len = l.getLength();
-	            results = new String[len];
-	            for (int i = 0; i < len; i++) {
-	                Node n = l.item(i);
-	                results[i] = n.getNodeValue();
-	            }
-	        } else {
-	            results = new String[]{xo.toString()};
-	        }
-		} catch (Exception e) {
-			String err = "Unable to get the text node(s) of "+xPath
-					+": " + e.getClass().getName() + ": "
-					+ e.getLocalizedMessage();
-			LogManager.getLogger(XMLUtils.class).error(err,e);
-			throw new TransformerException(err);
-		}
-		return results;
-
-    }
-
-
-    /**
-     * The value of the first text node at the xPath<br>
-     * @see #getTextNodes(Node, String, Node)
-     * @param contextNode
-     * @param xPath
-     * @param namespaceNode
-     * @return the String value
-     * @throws TransformerException
-     */
-    public static String getFirstTextNode(Node contextNode, String xPath,Node namespaceNode) throws TransformerException{
-    	String[] res = getTextNodes(contextNode,xPath,namespaceNode);
-    	if (res.length == 0)
-    		return null;
-    	return res[0];
-    }
-
-    /**
-     * The value of the first text node at the xPath<br>
-     * @see #getTextNodes(Node, String)
-     * @param contextNode
-     * @param xPath
-     * @return teh String value
-     * @throws TransformerException
-     */
-    public static String getFirstTextNode(Node contextNode, String xPath) throws TransformerException{
-    	return getFirstTextNode(contextNode,xPath,contextNode);
-    }
-
+            transformerFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
+            transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
+            transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
 
-    /**
-     * The value of the first text node at the xPath which is not null<br>
-     * @see #getTextNodes(Node, String)
-     * @param contextNode
-     * @param xPath
-     * @return teh String value
-     * @throws TransformerException
-     */
-    public static String getFirstTextNodeNotNull(Node contextNode, String xPath) throws TransformerException {
-    	String val=  getFirstTextNode(contextNode,xPath,contextNode);
-    	return val == null ? "" : val;
+            saxonTransformerFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
+            saxonTransformerFactory.setAttribute("http://saxon.sf.net/feature/version-warning", Boolean.FALSE);
+            saxonTransformerFactory.setAttribute("http://saxon.sf.net/feature/allow-external-functions", Boolean.FALSE);
+            saxonTransformerFactory.setAttribute("http://saxon.sf.net/feature/trace-external-functions", Boolean.FALSE);
+        } catch (TransformerConfigurationException e) {
+            // Just catch this, as Xalan doesn't support the above
+        }
     }
 
-
-
-
     /**
 	 * Returns a namespaced root element of a document
 	 * Useful to create a namespace holder element
@@ -280,7 +128,6 @@ public static NodeList getNodeList(Node contextNode, String xPath, String namesp
     	}
 	}
 
-
     /**
      * Returns the first Element of the Node List at xPath
      * @param n
@@ -294,58 +141,6 @@ public static Element getFirstElement(Node n, String xPath) throws TransformerEx
 			return (Element)nl.item(0);
 	}
 
-
-	/**
-	 * Validates the element against the provided XSD schema
-	 * @param element
-	 * @param schema
-	 * @return
-	 * @throws SAXException
-	 * @throws ParserConfigurationException
-	 * @throws IOException
-	 * @throws TransformerException
-	 */
-    public static Document validate(Element element, String schema) throws SAXException, ParserConfigurationException,
-            IOException, TransformerException {
-
-        LogManager.getLogger(XMLUtils.class).trace("validate() " + element.getLocalName());
-
-        // parse
-        Document d = null;
-        SAXErrorHandler seh = new SAXErrorHandler();
-
-        // initialize the sax parser which uses Xerces
-        System.setProperty("javax.xml.parsers.DocumentBuilderFactory", "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl");
-        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
-        // Schema validation based on schemaURL
-        factory.setNamespaceAware(true);
-        factory.setExpandEntityReferences(false);
-        factory.setValidating((schema != null));
-        factory.setAttribute("http://java.sun.com/xml/jaxp/properties/schemaLanguage", "http://www.w3.org/2001/XMLSchema");
-        if (schema != null) {
-            factory.setAttribute("http://java.sun.com/xml/jaxp/properties/schemaSource",
-                    new InputSource(new StringReader(schema)));
-        }
-        DocumentBuilder builder;
-        builder = factory.newDocumentBuilder();
-        builder.setErrorHandler(seh);
-        d = builder.parse(new InputSource(new StringReader(nodeToString(element))));
-
-        // check if dcument parsed correctly against the schema
-        if (schema != null) {
-            String errors = seh.getErrors();
-            if (!errors.equals("")) {
-                String xmlString = nodeToString(element);
-                String err = "The item " + element.getLocalName() + " did not validate against the model: \n" + errors + "\n"
-                        + xmlString; // .substring(0, Math.min(100, xmlString.length()));
-                throw new SAXException(err);
-            }
-        }
-        return d;
-    }
-
-
-
     public static String[] getAttributeNodeValue(Node contextNode, String xPath, Node namespaceNode) throws TransformerException{
         String[] results;
 
@@ -379,12 +174,6 @@ public static String[] getAttributeNodeValue(Node contextNode, String xPath, Nod
     }
 
     public static Transformer generateTransformer() throws TransformerConfigurationException {
-        try {
-            transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
-            transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
         return transformerFactory.newTransformer();
     }
 
diff --git a/org.talend.mdm.core.storage.sql/src/main/java/com/amalto/core/storage/hibernate/DefaultStorageClassLoader.java b/org.talend.mdm.core.storage.sql/src/main/java/com/amalto/core/storage/hibernate/DefaultStorageClassLoader.java
index d992c59148..7b103ac459 100644
--- a/org.talend.mdm.core.storage.sql/src/main/java/com/amalto/core/storage/hibernate/DefaultStorageClassLoader.java
+++ b/org.talend.mdm.core.storage.sql/src/main/java/com/amalto/core/storage/hibernate/DefaultStorageClassLoader.java
@@ -21,6 +21,7 @@
 import java.util.Map;
 import java.util.UUID;
 
+import javax.xml.XMLConstants;
 import javax.xml.parsers.DocumentBuilder;
 import javax.xml.parsers.DocumentBuilderFactory;
 import javax.xml.parsers.ParserConfigurationException;
@@ -47,7 +48,6 @@
 import org.w3c.dom.Node;
 import org.xml.sax.SAXException;
 
-import com.amalto.commons.core.utils.XMLUtils;
 import com.amalto.core.storage.StorageType;
 import com.amalto.core.storage.datasource.RDBMSDataSource;
 import com.amalto.core.storage.datasource.RDBMSDataSourceBuilder;
@@ -90,6 +90,9 @@ public InputStream generateHibernateMapping() {
             DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
             factory.setNamespaceAware(true);
             factory.setExpandEntityReferences(false);
+            factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, Boolean.TRUE);
+            factory.setFeature("http://xml.org/sax/features/external-general-entities", false);
+            factory.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
             DocumentBuilder documentBuilder = factory.newDocumentBuilder();
             documentBuilder.setEntityResolver(HibernateStorage.ENTITY_RESOLVER);
             Document document = documentBuilder.parse(this.getClass().getResourceAsStream(HIBERNATE_MAPPING_TEMPLATE));
@@ -170,7 +173,9 @@ public Document generateHibernateConfiguration(RDBMSDataSource rdbmsDataSource)
         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
         factory.setNamespaceAware(true);
         factory.setExpandEntityReferences(false);
-
+        factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, Boolean.TRUE);
+        factory.setFeature("http://xml.org/sax/features/external-general-entities", false);
+        factory.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
         DocumentBuilder documentBuilder = factory.newDocumentBuilder();
         documentBuilder.setEntityResolver(HibernateStorage.ENTITY_RESOLVER);
         Document document = documentBuilder.parse(DefaultStorageClassLoader.class.getResourceAsStream(HIBERNATE_CONFIG_TEMPLATE));
@@ -291,7 +296,7 @@ private static void setPropertyValue(Document document, String propertyName, Str
 
     protected InputStream toInputStream(Document document) throws Exception {
         StringWriter buffer = new StringWriter();
-        Transformer transformer = XMLUtils.generateTransformer();
+        Transformer transformer = MDMXMLUtils.generateTransformer();
         DocumentType doctype = document.getDoctype();
         if (doctype != null) {
             if (doctype.getPublicId() != null) {
diff --git a/org.talend.mdm.core.storage.sql/src/test/java/com/amalto/core/save/DocumentSaveTest.java b/org.talend.mdm.core.storage.sql/src/test/java/com/amalto/core/save/DocumentSaveTest.java
index c9f0601187..c5d4ff0673 100644
--- a/org.talend.mdm.core.storage.sql/src/test/java/com/amalto/core/save/DocumentSaveTest.java
+++ b/org.talend.mdm.core.storage.sql/src/test/java/com/amalto/core/save/DocumentSaveTest.java
@@ -32,10 +32,9 @@
 import javax.xml.xpath.XPathExpressionException;
 import javax.xml.xpath.XPathFactory;
 
-import com.amalto.core.delegator.MockILocalUser;
 import org.apache.commons.io.IOUtils;
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.springframework.cache.ehcache.EhCacheCacheManager;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.support.ClassPathXmlApplicationContext;
@@ -49,9 +48,9 @@
 import org.w3c.dom.Node;
 import org.w3c.dom.NodeList;
 
-import com.amalto.commons.core.utils.XMLUtils;
 import com.amalto.core.delegator.BaseSecurityCheck;
 import com.amalto.core.delegator.BeanDelegatorContainer;
+import com.amalto.core.delegator.MockILocalUser;
 import com.amalto.core.history.DeleteType;
 import com.amalto.core.history.MutableDocument;
 import com.amalto.core.objects.UpdateReportPOJO;
@@ -1721,7 +1720,7 @@ public void testUpdateConf() throws Exception {
                 + "<key>[HEAD].CoreTestsContainer.auto_increment.auto_increment</key>" + "<value>1</value>" + "</entry>"
                 + "<entry>" + "<key>[HEAD].Product.ProductFamily.Id</key>" + "<value>30</value>" + "</entry>" + "<entry>"
                 + "<key>[HEAD].CoreTestsContainer.auto_increment1.auto_increment1</key>" + "<value>1</value>" + "</entry>"
-                + "</AutoIncrement>", XMLUtils.nodeToString(committedElement, true, false).replaceAll("\r\n", "\n"));
+                + "</AutoIncrement>", MDMXMLUtils.nodeToString(committedElement, true, false).replaceAll("\r\n", "\n"));
         assertTrue(source.hasCalledInitAutoIncrement);
 
     }
diff --git a/org.talend.mdm.core/src/com/amalto/core/delegator/IValidation.java b/org.talend.mdm.core/src/com/amalto/core/delegator/IValidation.java
index 706f0b0af5..c8d055e0e8 100644
--- a/org.talend.mdm.core/src/com/amalto/core/delegator/IValidation.java
+++ b/org.talend.mdm.core/src/com/amalto/core/delegator/IValidation.java
@@ -24,8 +24,8 @@
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
 
+import com.amalto.commons.core.utils.SAXErrorHandler;
 import com.amalto.core.util.CVCException;
-import com.amalto.core.util.SAXErrorHandler;
 import com.amalto.core.util.Util;
 
 public class IValidation {
diff --git a/org.talend.mdm.core/src/com/amalto/core/objects/ItemPOJO.java b/org.talend.mdm.core/src/com/amalto/core/objects/ItemPOJO.java
index 722a143aa1..7aba88b7ba 100644
--- a/org.talend.mdm.core/src/com/amalto/core/objects/ItemPOJO.java
+++ b/org.talend.mdm.core/src/com/amalto/core/objects/ItemPOJO.java
@@ -20,8 +20,8 @@
 import javax.xml.stream.XMLStreamException;
 import javax.xml.stream.XMLStreamWriter;
 
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.talend.mdm.commmon.util.core.ICoreConstants;
 import org.talend.mdm.commmon.util.core.MDMConfiguration;
 import org.talend.mdm.commmon.util.webapp.XObjectType;
@@ -438,7 +438,7 @@ public static DroppedItemPOJOPK drop(ItemPOJOPK itemPOJOPK, String partPath, boo
                         }
 
                         if (projection != null)
-                            Util.validate(itemPOJO.getProjection(), dataModelPOJO.getSchema());
+                            Util.validateSchema(itemPOJO.getProjection(), dataModelPOJO.getSchema());
                     }
                 }
             }
diff --git a/org.talend.mdm.core/src/com/amalto/core/save/DOMDocument.java b/org.talend.mdm.core/src/com/amalto/core/save/DOMDocument.java
index 9510b597fd..aff7e29fcd 100644
--- a/org.talend.mdm.core/src/com/amalto/core/save/DOMDocument.java
+++ b/org.talend.mdm.core/src/com/amalto/core/save/DOMDocument.java
@@ -15,10 +15,10 @@
 import javax.xml.parsers.DocumentBuilder;
 
 import org.talend.mdm.commmon.metadata.ComplexTypeMetadata;
+import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.w3c.dom.Element;
 import org.w3c.dom.Node;
 
-import com.amalto.commons.core.utils.XMLUtils;
 import com.amalto.core.history.DOMMutableDocument;
 import com.amalto.core.history.DeleteType;
 import com.amalto.core.history.Document;
@@ -146,7 +146,7 @@ public String exportToString() {
             // TMDM-6900 Ensure the xsi prefix is declared in exported document when save uses a DOM document.
             documentElement.setAttributeNS(XMLConstants.XMLNS_ATTRIBUTE_NS_URI,
                     "xmlns:xsi", XMLConstants.W3C_XML_SCHEMA_INSTANCE_NS_URI); //$NON-NLS-1$
-            return XMLUtils.nodeToString(documentElement);
+            return MDMXMLUtils.nodeToString(documentElement);
         } catch (Exception e) {
             throw new RuntimeException(e);
         }
diff --git a/org.talend.mdm.core/src/com/amalto/core/schema/validation/XmlSchemaValidator.java b/org.talend.mdm.core/src/com/amalto/core/schema/validation/XmlSchemaValidator.java
index 540d4e31f6..488e61e41b 100644
--- a/org.talend.mdm.core/src/com/amalto/core/schema/validation/XmlSchemaValidator.java
+++ b/org.talend.mdm.core/src/com/amalto/core/schema/validation/XmlSchemaValidator.java
@@ -25,7 +25,7 @@
 import org.w3c.dom.Element;
 import org.xml.sax.SAXException;
 
-import com.amalto.core.util.SAXErrorHandler;
+import com.amalto.commons.core.utils.SAXErrorHandler;
 import com.amalto.core.util.ValidateException;
 
 public class XmlSchemaValidator implements Validator {
diff --git a/org.talend.mdm.core/src/com/amalto/core/server/DefaultDataModel.java b/org.talend.mdm.core/src/com/amalto/core/server/DefaultDataModel.java
index 99ca6ecc0f..4b909c3623 100644
--- a/org.talend.mdm.core/src/com/amalto/core/server/DefaultDataModel.java
+++ b/org.talend.mdm.core/src/com/amalto/core/server/DefaultDataModel.java
@@ -27,8 +27,8 @@
 import javax.xml.xpath.XPathFactory;
 
 import org.apache.commons.lang3.StringUtils;
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.talend.mdm.commmon.metadata.ComplexTypeMetadata;
 import org.talend.mdm.commmon.metadata.MetadataRepository;
 import org.talend.mdm.commmon.util.core.MDMXMLUtils;
@@ -37,7 +37,6 @@
 import org.w3c.dom.Node;
 import org.xml.sax.InputSource;
 
-import com.amalto.commons.core.utils.XMLUtils;
 import com.amalto.core.objects.ObjectPOJO;
 import com.amalto.core.objects.ObjectPOJOPK;
 import com.amalto.core.objects.datamodel.DataModelPOJO;
@@ -191,7 +190,7 @@ public String putBusinessConceptSchema(DataModelPOJOPK pk, String conceptSchemaS
                 existingNode.getParentNode().removeChild(existingNode);
             }
             schemaAsDOM.getDocumentElement().appendChild(schemaAsDOM.importNode(newConceptAsDOM.getDocumentElement(), true));
-            dataModel.setSchema(XMLUtils.nodeToString(schemaAsDOM, true, false).replaceAll("\r\n", "\n"));
+            dataModel.setSchema(MDMXMLUtils.nodeToString(schemaAsDOM, true, false).replaceAll("\r\n", "\n"));
             dataModel.store();
             invalidateConceptSession(dataModel.getName());
             return conceptName;
@@ -223,7 +222,7 @@ public String deleteBusinessConcept(DataModelPOJOPK pk, String businessConceptNa
             if (existingNode != null) {
                 existingNode.getParentNode().removeChild(existingNode);
             }
-            dataModel.setSchema(XMLUtils.nodeToString(schemaAsDOM, true, false).replaceAll("\r\n", "\n"));
+            dataModel.setSchema(MDMXMLUtils.nodeToString(schemaAsDOM, true, false).replaceAll("\r\n", "\n"));
             dataModel.store();
             invalidateConceptSession(dataModel.getName());
             return businessConceptName;
diff --git a/org.talend.mdm.core/src/com/amalto/core/storage/SystemStorageWrapper.java b/org.talend.mdm.core/src/com/amalto/core/storage/SystemStorageWrapper.java
index 6351244b97..3aaec6e887 100644
--- a/org.talend.mdm.core/src/com/amalto/core/storage/SystemStorageWrapper.java
+++ b/org.talend.mdm.core/src/com/amalto/core/storage/SystemStorageWrapper.java
@@ -35,6 +35,7 @@
 import org.talend.mdm.commmon.metadata.MetadataRepository;
 import org.talend.mdm.commmon.metadata.MetadataVisitor;
 import org.talend.mdm.commmon.metadata.TypeMetadata;
+import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.talend.mdm.commmon.util.webapp.XSystemObjects;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
@@ -339,7 +340,7 @@ public long putDocumentFromString(String xmlString, String uniqueID, String clus
             throws XmlServerException {
         try {
             InputSource source = new InputSource(new StringReader(xmlString));
-            Document document = DOCUMENT_BUILDER_FACTORY.newDocumentBuilder().parse(source);
+            Document document = MDMXMLUtils.getDocumentBuilderWithNamespace().get().parse(source);
             return putDocumentFromDOM(document.getDocumentElement(), uniqueID, clusterName);
         } catch (Exception e) {
             throw new XmlServerException(e);
diff --git a/org.talend.mdm.core/src/com/amalto/core/storage/datasource/DataSourceFactory.java b/org.talend.mdm.core/src/com/amalto/core/storage/datasource/DataSourceFactory.java
index 383ce73826..1fd51708b5 100644
--- a/org.talend.mdm.core/src/com/amalto/core/storage/datasource/DataSourceFactory.java
+++ b/org.talend.mdm.core/src/com/amalto/core/storage/datasource/DataSourceFactory.java
@@ -10,12 +10,32 @@
 
 package com.amalto.core.storage.datasource;
 
-import com.amalto.core.server.api.DataSourceExtension;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.InputStream;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Properties;
+import java.util.ServiceLoader;
+
+import javax.xml.XMLConstants;
+import javax.xml.namespace.QName;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.xpath.XPath;
+import javax.xml.xpath.XPathConstants;
+import javax.xml.xpath.XPathExpression;
+import javax.xml.xpath.XPathExpressionException;
+import javax.xml.xpath.XPathFactory;
 
 import org.apache.commons.lang.NotImplementedException;
 import org.apache.commons.lang.StringUtils;
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.springframework.beans.BeansException;
 import org.springframework.cache.annotation.Cacheable;
 import org.springframework.context.ApplicationContext;
@@ -26,15 +46,8 @@
 import org.w3c.dom.Document;
 import org.w3c.dom.Node;
 import org.w3c.dom.NodeList;
-import javax.xml.namespace.QName;
-import javax.xml.parsers.DocumentBuilder;
-import javax.xml.parsers.DocumentBuilderFactory;
-import javax.xml.xpath.*;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.io.InputStream;
-import java.util.*;
+
+import com.amalto.core.server.api.DataSourceExtension;
 
 @Component
 public class DataSourceFactory implements ApplicationContextAware {
@@ -107,6 +120,11 @@ private static synchronized InputStream readDataSourcesConfiguration() {
     private static Map<String, DataSourceDefinition> readDocument(InputStream configurationAsStream) {
         Document document;
         try {
+            factory.setExpandEntityReferences(false);
+            factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+            factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, Boolean.TRUE);
+            factory.setFeature("http://xml.org/sax/features/external-general-entities", false);
+            factory.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
             DocumentBuilder documentBuilder = factory.newDocumentBuilder();
             document = documentBuilder.parse(configurationAsStream);
         } catch (Exception e) {
diff --git a/org.talend.mdm.core/src/com/amalto/core/util/Util.java b/org.talend.mdm.core/src/com/amalto/core/util/Util.java
index 486bc63880..e7c84cc0e2 100644
--- a/org.talend.mdm.core/src/com/amalto/core/util/Util.java
+++ b/org.talend.mdm.core/src/com/amalto/core/util/Util.java
@@ -28,11 +28,11 @@
 import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
-import java.util.concurrent.atomic.AtomicInteger;
 import java.util.MissingResourceException;
 import java.util.Properties;
 import java.util.Set;
 import java.util.UUID;
+import java.util.concurrent.atomic.AtomicInteger;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 import java.util.zip.ZipEntry;
@@ -50,13 +50,14 @@
 
 import org.apache.commons.lang.StringEscapeUtils;
 import org.apache.commons.lang.StringUtils;
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.talend.mdm.commmon.metadata.ComplexTypeMetadata;
 import org.talend.mdm.commmon.metadata.FieldMetadata;
 import org.talend.mdm.commmon.metadata.MetadataRepository;
 import org.talend.mdm.commmon.util.core.ITransformerConstants;
 import org.talend.mdm.commmon.util.core.MDMConfiguration;
+import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
 import org.w3c.dom.Node;
@@ -64,7 +65,7 @@
 import org.w3c.dom.Text;
 import org.xml.sax.SAXException;
 
-import com.amalto.commons.core.utils.XMLUtils;
+import com.amalto.commons.core.utils.SAXErrorHandler;
 import com.amalto.core.delegator.BeanDelegatorContainer;
 import com.amalto.core.history.MutableDocument;
 import com.amalto.core.history.accessor.Accessor;
@@ -131,7 +132,7 @@
 import com.sun.xml.xsom.util.DomAnnotationParserFactory;
 
 @SuppressWarnings({ "deprecation", "nls" })
-public class Util extends XmlUtil {
+public class Util extends MDMXMLUtils {
 
     private static final Logger LOGGER = LogManager.getLogger(Util.class);
 
@@ -201,7 +202,7 @@ public class Util extends XmlUtil {
         }
     }
 
-    public static Document validate(Element element, String schema) throws Exception {
+    public static Document validateSchema(Element element, String schema) throws Exception {
         return BeanDelegatorContainer.getInstance().getValidationDelegator().validation(element, schema);
     }
 
@@ -294,7 +295,7 @@ public static String[] getKeyValuesFromItem(Element item, Collection<FieldMetada
      */
     public static String nodeToString(Node n) throws TransformerException {
         // role-pOJO(PROVISIONING.Role) on Linux will have invalid attribute (xmlns:admin="") need to remove
-        return XMLUtils.nodeToString(n, true, LOGGER.isDebugEnabled()).replaceAll("\r\n", "\n").replaceAll(" xmlns:admin=\"\"", "");
+        return MDMXMLUtils.nodeToString(n, true, LOGGER.isDebugEnabled()).replaceAll("\r\n", "\n").replaceAll(" xmlns:admin=\"\"", "");
     }
 
     /**
diff --git a/org.talend.mdm.core/test/com/amalto/core/util/UtilTestCase.java b/org.talend.mdm.core/test/com/amalto/core/util/UtilTestCase.java
index b7146c1c7f..f6d98efac1 100755
--- a/org.talend.mdm.core/test/com/amalto/core/util/UtilTestCase.java
+++ b/org.talend.mdm.core/test/com/amalto/core/util/UtilTestCase.java
@@ -20,11 +20,9 @@
 import javax.xml.xpath.XPathConstants;
 import javax.xml.xpath.XPathFactory;
 
-import junit.framework.TestCase;
-
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
 import org.talend.mdm.commmon.util.core.MDMConfiguration;
+import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
 import org.w3c.dom.Node;
@@ -32,7 +30,6 @@
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
 
-import com.amalto.commons.core.utils.XMLUtils;
 import com.amalto.core.delegator.IValidation;
 import com.amalto.core.objects.DroppedItemPOJO;
 import com.amalto.core.objects.ItemPOJO;
@@ -48,6 +45,8 @@
 import com.amalto.xmlserver.interfaces.WhereCondition;
 import com.amalto.xmlserver.interfaces.WhereLogicOperator;
 
+import junit.framework.TestCase;
+
 /**
  * DOC achen class global comment. Detailled comment
  */
@@ -381,7 +380,7 @@ public void testSetUserPropertyDoesNotExist() throws Exception {
         Document user = Util.parse(xml);
         Util.setUserProperty(user, "newprop", "newvalue");
 
-        String result = XMLUtils.nodeToString(user, true, false).replaceAll("\r\n", "\n");
+        String result = MDMXMLUtils.nodeToString(user, true, false).replaceAll("\r\n", "\n");
         assertEquals("<User><username>A</username><id>B</id><properties><property><name>x</name><value>y</value></property><property><name>newprop</name><value>newvalue</value></property></properties></User>", result);
     }
 
@@ -390,7 +389,7 @@ public void testSetUserPropertyNoProperties() throws Exception {
         Document user = Util.parse(xml);
         Util.setUserProperty(user, "newprop", "newvalue");
 
-        String result = XMLUtils.nodeToString(user, true, false).replaceAll("\r\n", "\n");
+        String result = MDMXMLUtils.nodeToString(user, true, false).replaceAll("\r\n", "\n");
         assertEquals("<User><username>A</username><id>B</id><properties><property><name>newprop</name><value>newvalue</value></property></properties></User>", result);
     }
 
@@ -399,7 +398,7 @@ public void testSetUserPropertyOverride() throws Exception {
         Document user = Util.parse(xml);
         Util.setUserProperty(user, "x", "z");
 
-        String result = XMLUtils.nodeToString(user, true, false).replaceAll("\r\n", "\n");
+        String result = MDMXMLUtils.nodeToString(user, true, false).replaceAll("\r\n", "\n");
         assertEquals("<User><username>A</username><id>B</id><properties><property><name>x</name><value>z</value></property></properties></User>", result);
     }
 
@@ -408,7 +407,7 @@ public void testSetUserPropertyNullName() throws Exception {
         Document user = Util.parse(xml);
         Util.setUserProperty(user, null, "z");
 
-        String result = XMLUtils.nodeToString(user, true, false).replaceAll("\r\n", "\n");
+        String result = MDMXMLUtils.nodeToString(user, true, false).replaceAll("\r\n", "\n");
         assertEquals("<User><username>A</username><id>B</id><properties><property><name>x</name><value>y</value></property></properties></User>", result);
     }
 
diff --git a/org.talend.mdm.query/src/com/amalto/core/util/SAXErrorHandler.java b/org.talend.mdm.query/src/com/amalto/core/util/SAXErrorHandler.java
deleted file mode 100644
index 83a778a30a..0000000000
--- a/org.talend.mdm.query/src/com/amalto/core/util/SAXErrorHandler.java
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Copyright (C) 2006-2019 Talend Inc. - www.talend.com
- *
- * This source code is available under agreement available at
- * %InstallDIR%\features\org.talend.rcp.branding.%PRODUCTNAME%\%PRODUCTNAME%license.txt
- *
- * You should have received a copy of the agreement along with this program; if not, write to Talend SA 9 rue Pages
- * 92150 Suresnes, France
- */
-/*
- */
-package com.amalto.core.util;
-
-import java.util.regex.Pattern;
-
-import org.xml.sax.SAXException;
-import org.xml.sax.SAXParseException;
-import org.xml.sax.helpers.DefaultHandler;
-
-public class SAXErrorHandler extends DefaultHandler {
-
-    private static final Pattern namespacesP = Pattern.compile("(\"publicid:org.*?.xsd\":)|(\"rrn:org.*?.xsd\":)");
-
-    private static final Pattern bracketsP = Pattern.compile("(\\()|(\\))");
-
-    private static final Pattern commaP = Pattern.compile(",");
-
-    private String errors;
-
-    public SAXErrorHandler() {
-    }
-
-    public void warning(SAXParseException ex) throws SAXException {
-        setErrors(formatError("Warning", ex));
-        setErrors("\n");
-    }
-
-    public void error(SAXParseException ex) throws SAXException {
-        setErrors(formatError("Error", ex));
-        setErrors("\n");
-    }
-
-    public void fatalError(SAXParseException ex) throws SAXException {
-        setErrors(formatError("Fatal Error", ex));
-        setErrors("\n");
-        throw ex;
-    }
-
-    private String formatError(String type, SAXParseException ex) {
-        String error = "[" + type + "] ";
-        String systemId = ex.getSystemId();
-        if (systemId != null) {
-            int index = systemId.lastIndexOf('/');
-            if (index != -1) {
-                systemId = systemId.substring(index + 1);
-            }
-            error = error + systemId;
-        }
-        String msg = ex.getMessage();
-        msg = namespacesP.matcher(msg).replaceAll("");
-        msg = bracketsP.matcher(msg).replaceAll("");
-        msg = commaP.matcher(msg).replaceAll("");
-        error = error + ":" + ex.getLineNumber() + ":" + ex.getColumnNumber() + ": " + msg;
-        return error;
-    }
-
-    public String getErrors() {
-        return (errors == null || errors.trim().length() == 0) ? "" : errors;
-    }
-
-    public void setErrors(String error) {
-        if (errors == null)
-            errors = "";
-        errors += error;
-    }
-
-}
\ No newline at end of file
diff --git a/org.talend.mdm.query/src/com/amalto/core/util/XmlUtil.java b/org.talend.mdm.query/src/com/amalto/core/util/XmlUtil.java
deleted file mode 100644
index 8ef74c5767..0000000000
--- a/org.talend.mdm.query/src/com/amalto/core/util/XmlUtil.java
+++ /dev/null
@@ -1,120 +0,0 @@
-/*
- * Copyright (C) 2006-2019 Talend Inc. - www.talend.com
- *
- * This source code is available under agreement available at
- * %InstallDIR%\features\org.talend.rcp.branding.%PRODUCTNAME%\%PRODUCTNAME%license.txt
- *
- * You should have received a copy of the agreement along with this program; if not, write to Talend SA 9 rue Pages
- * 92150 Suresnes, France
- */
-package com.amalto.core.util;
-
-import org.w3c.dom.Document;
-import org.w3c.dom.Node;
-import org.w3c.dom.NodeList;
-import org.xml.sax.InputSource;
-import org.xml.sax.SAXException;
-
-import javax.xml.namespace.NamespaceContext;
-import javax.xml.parsers.DocumentBuilder;
-import javax.xml.parsers.DocumentBuilderFactory;
-import javax.xml.parsers.ParserConfigurationException;
-import javax.xml.transform.TransformerException;
-import javax.xml.xpath.XPath;
-import javax.xml.xpath.XPathConstants;
-import javax.xml.xpath.XPathFactory;
-import java.io.IOException;
-import java.io.StringReader;
-import java.util.Collections;
-import java.util.Iterator;
-
-@SuppressWarnings("nls")
-public class XmlUtil {
-
-    private static DocumentBuilderFactory nonValidatingDocumentBuilderFactory;
-
-    private static synchronized DocumentBuilderFactory getDocumentBuilderFactory() {
-        if (nonValidatingDocumentBuilderFactory == null) {
-            nonValidatingDocumentBuilderFactory = DocumentBuilderFactory.newInstance();
-            nonValidatingDocumentBuilderFactory.setNamespaceAware(true);
-            nonValidatingDocumentBuilderFactory.setValidating(false);
-            nonValidatingDocumentBuilderFactory.setExpandEntityReferences(false);
-        }
-        return nonValidatingDocumentBuilderFactory;
-    }
-
-    public static Document parse(String xmlString) throws ParserConfigurationException, IOException, SAXException {
-        DocumentBuilderFactory factory;
-        factory = getDocumentBuilderFactory();
-        factory.setExpandEntityReferences(false);
-        DocumentBuilder builder = factory.newDocumentBuilder();
-        SAXErrorHandler seh = new SAXErrorHandler();
-        builder.setErrorHandler(seh);
-        Document d = builder.parse(new InputSource(new StringReader(xmlString)));
-        // check if document parsed correctly against the schema
-        String errors = seh.getErrors();
-        if (errors.length() != 0) {
-            String err = "Document did not parse against schema: \n" + errors + "\n"
-                    + xmlString.substring(0, Math.min(100, xmlString.length()));
-            throw new SAXException(err);
-        }
-        return d;
-    }
-
-    public static String getFirstTextNode(Node contextNode, String xPath, Node namespaceNode) throws TransformerException {
-        String[] res = getTextNodes(contextNode, xPath, namespaceNode);
-        if (res.length == 0) {
-            return null;
-        }
-        return res[0];
-    }
-
-    public static String getFirstTextNode(Node contextNode, String xPath) throws TransformerException {
-        return getFirstTextNode(contextNode, xPath, contextNode);
-    }
-
-    public static String[] getTextNodes(Node contextNode, String xPath, final Node namespaceNode) throws TransformerException {
-        String[] results;
-        // test for hard-coded values
-        if (xPath.startsWith("\"") && xPath.endsWith("\"")) {
-            return new String[] { xPath.substring(1, xPath.length() - 1) };
-        }
-        // test for incomplete path (elements missing /text())
-        if (!xPath.matches(".*@[^/\\]]+")) { // attribute
-            if (!xPath.endsWith(")")) { // function
-                xPath += "/text()";
-            }
-        }
-        try {
-            XPath path = XPathFactory.newInstance().newXPath();
-            path.setNamespaceContext(new NamespaceContext() {
-
-                @Override
-                public String getNamespaceURI(String s) {
-                    return namespaceNode.getNamespaceURI();
-                }
-
-                @Override
-                public String getPrefix(String s) {
-                    return namespaceNode.getPrefix();
-                }
-
-                @Override
-                public Iterator getPrefixes(String s) {
-                    return Collections.singleton(namespaceNode.getPrefix()).iterator();
-                }
-            });
-            NodeList xo = (NodeList) path.evaluate(xPath, contextNode, XPathConstants.NODESET);
-            results = new String[xo.getLength()];
-            for (int i = 0; i < xo.getLength(); i++) {
-                results[i] = xo.item(i).getTextContent();
-            }
-        } catch (Exception e) {
-            String err = "Unable to get the text node(s) of " + xPath + ": " + e.getClass().getName() + ": "
-                    + e.getLocalizedMessage();
-            throw new TransformerException(err);
-        }
-        return results;
-
-    }
-}
diff --git a/org.talend.mdm.query/src/com/amalto/xmlserver/interfaces/WhereCondition.java b/org.talend.mdm.query/src/com/amalto/xmlserver/interfaces/WhereCondition.java
index 9bccc669ac..520b545a09 100644
--- a/org.talend.mdm.query/src/com/amalto/xmlserver/interfaces/WhereCondition.java
+++ b/org.talend.mdm.query/src/com/amalto/xmlserver/interfaces/WhereCondition.java
@@ -17,7 +17,7 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
-import com.amalto.core.util.XmlUtil;
+import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.w3c.dom.Document;
 
 /**
@@ -96,12 +96,12 @@ public WhereCondition(String leftPath, String operator, String rightValueOrPath,
 
     public static WhereCondition deserialize(String xml) throws XmlServerException {
         try {
-            Document d = XmlUtil.parse(xml);
-            return new WhereCondition(XmlUtil.getFirstTextNode(d.getDocumentElement(), "./leftpath"),
-                    XmlUtil.getFirstTextNode(d.getDocumentElement(), "./operator"),
-                    XmlUtil.getFirstTextNode(d.getDocumentElement(), "./rightvalueorpath"),
-                    XmlUtil.getFirstTextNode(d.getDocumentElement(), "./stringpredicate"),
-                    "yes".equals(XmlUtil.getFirstTextNode(d.getDocumentElement(), "./spellcheck")));
+            Document d = MDMXMLUtils.parse(xml);
+            return new WhereCondition(MDMXMLUtils.getFirstTextNode(d.getDocumentElement(), "./leftpath"),
+                    MDMXMLUtils.getFirstTextNode(d.getDocumentElement(), "./operator"),
+                    MDMXMLUtils.getFirstTextNode(d.getDocumentElement(), "./rightvalueorpath"),
+                    MDMXMLUtils.getFirstTextNode(d.getDocumentElement(), "./stringpredicate"),
+                    "yes".equals(MDMXMLUtils.getFirstTextNode(d.getDocumentElement(), "./spellcheck")));
         } catch (Exception e) {
             throw new XmlServerException(e);
         }
diff --git a/org.talend.mdm.webapp.base/src/main/java/org/talend/mdm/webapp/base/server/ForeignKeyHelper.java b/org.talend.mdm.webapp.base/src/main/java/org/talend/mdm/webapp/base/server/ForeignKeyHelper.java
index 973e174eed..e816fcc25e 100644
--- a/org.talend.mdm.webapp.base/src/main/java/org/talend/mdm/webapp/base/server/ForeignKeyHelper.java
+++ b/org.talend.mdm.webapp.base/src/main/java/org/talend/mdm/webapp/base/server/ForeignKeyHelper.java
@@ -19,8 +19,8 @@
 
 import org.apache.commons.lang.StringEscapeUtils;
 import org.apache.commons.lang.StringUtils;
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.talend.mdm.commmon.metadata.ComplexTypeMetadata;
 import org.talend.mdm.commmon.metadata.ContainedComplexTypeMetadata;
 import org.talend.mdm.commmon.metadata.ContainedTypeFieldMetadata;
@@ -65,7 +65,6 @@
 import com.amalto.webapp.core.dmagent.SchemaAbstractWebAgent;
 import com.amalto.webapp.core.dmagent.SchemaWebAgent;
 import com.amalto.webapp.core.util.Util;
-import com.amalto.webapp.core.util.XmlUtil;
 import com.amalto.xmlserver.interfaces.WhereCondition;
 import com.extjs.gxt.ui.client.Style.SortDir;
 
@@ -704,7 +703,12 @@ private static String parseRightValueOrPath(String xml, String dataObject, Strin
         } else {
             if (xml != null) {
                 // get context for expression
-                org.dom4j.Document doc = XmlUtil.parseDocument(Util.parse(xml));
+                org.dom4j.Document doc = null;
+                org.w3c.dom.Document rawDoc = Util.parse(xml);
+                if (rawDoc != null) {
+                    org.dom4j.io.DOMReader xmlReader = new org.dom4j.io.DOMReader();
+                    doc = xmlReader.read(rawDoc);
+                }
                 org.dom4j.Node currentNode = doc.selectSingleNode(currentXpath);
                 org.dom4j.Node targetNode = null;
                 if (org.talend.mdm.webapp.base.shared.util.CommonUtil.isRelativePath(rightValueOrPath)) {
diff --git a/org.talend.mdm.webapp.base/src/test/java/org/talend/mdm/webapp/base/client/util/XmlUtilTest.java b/org.talend.mdm.webapp.base/src/test/java/org/talend/mdm/webapp/base/client/util/XmlUtilTest.java
deleted file mode 100644
index ba9a79fd8d..0000000000
--- a/org.talend.mdm.webapp.base/src/test/java/org/talend/mdm/webapp/base/client/util/XmlUtilTest.java
+++ /dev/null
@@ -1,25 +0,0 @@
-/*
- * Copyright (C) 2006-2019 Talend Inc. - www.talend.com
- *
- * This source code is available under agreement available at
- * %InstallDIR%\features\org.talend.rcp.branding.%PRODUCTNAME%\%PRODUCTNAME%license.txt
- *
- * You should have received a copy of the agreement along with this program; if not, write to Talend SA 9 rue Pages
- * 92150 Suresnes, France
- */
-package org.talend.mdm.webapp.base.client.util;
-
-import junit.framework.TestCase;
-
-/**
- * DOC talend2 class global comment. Detailled comment
- */
-public class XmlUtilTest extends TestCase {
-
-    public void testTransformXmlAndString() {
-        String xml = "<MultipleCriteria><appearance>true</appearance><SimpleCriterion><key>Product/Id</key><operator>EQUALS</operator><value>*</value><info>*</info></SimpleCriterion><operator>AND</operator><SimpleCriterion><key>Product/Name</key><operator>EQUALS</operator><value>*</value><info>*</info></SimpleCriterion><operator>AND</operator><MultipleCriteria><appearance>true</appearance><SimpleCriterion><key>Product/Description</key><operator>EQUALS</operator><value>*</value><info>*</info></SimpleCriterion><operator>AND</operator><SimpleCriterion><key>Product/Features</key><operator>FULLTEXTSEARCH</operator><value>*</value><info>*</info></SimpleCriterion><operator>AND</operator><MultipleCriteria><appearance>true</appearance><SimpleCriterion><key>Product/Id</key><operator>EQUALS</operator><value>1</value><info>1</info></SimpleCriterion><operator>AND</operator><SimpleCriterion><key>Product/Name</key><operator>EQUALS</operator><value>2</value><info>2</info></SimpleCriterion></MultipleCriteria></MultipleCriteria></MultipleCriteria>"; //$NON-NLS-1$
-        String value = "&lt;MultipleCriteria&gt;&lt;appearance&gt;true&lt;/appearance&gt;&lt;SimpleCriterion&gt;&lt;key&gt;Product/Id&lt;/key&gt;&lt;operator&gt;EQUALS&lt;/operator&gt;&lt;value&gt;*&lt;/value&gt;&lt;info&gt;*&lt;/info&gt;&lt;/SimpleCriterion&gt;&lt;operator&gt;AND&lt;/operator&gt;&lt;SimpleCriterion&gt;&lt;key&gt;Product/Name&lt;/key&gt;&lt;operator&gt;EQUALS&lt;/operator&gt;&lt;value&gt;*&lt;/value&gt;&lt;info&gt;*&lt;/info&gt;&lt;/SimpleCriterion&gt;&lt;operator&gt;AND&lt;/operator&gt;&lt;MultipleCriteria&gt;&lt;appearance&gt;true&lt;/appearance&gt;&lt;SimpleCriterion&gt;&lt;key&gt;Product/Description&lt;/key&gt;&lt;operator&gt;EQUALS&lt;/operator&gt;&lt;value&gt;*&lt;/value&gt;&lt;info&gt;*&lt;/info&gt;&lt;/SimpleCriterion&gt;&lt;operator&gt;AND&lt;/operator&gt;&lt;SimpleCriterion&gt;&lt;key&gt;Product/Features&lt;/key&gt;&lt;operator&gt;FULLTEXTSEARCH&lt;/operator&gt;&lt;value&gt;*&lt;/value&gt;&lt;info&gt;*&lt;/info&gt;&lt;/SimpleCriterion&gt;&lt;operator&gt;AND&lt;/operator&gt;&lt;MultipleCriteria&gt;&lt;appearance&gt;true&lt;/appearance&gt;&lt;SimpleCriterion&gt;&lt;key&gt;Product/Id&lt;/key&gt;&lt;operator&gt;EQUALS&lt;/operator&gt;&lt;value&gt;1&lt;/value&gt;&lt;info&gt;1&lt;/info&gt;&lt;/SimpleCriterion&gt;&lt;operator&gt;AND&lt;/operator&gt;&lt;SimpleCriterion&gt;&lt;key&gt;Product/Name&lt;/key&gt;&lt;operator&gt;EQUALS&lt;/operator&gt;&lt;value&gt;2&lt;/value&gt;&lt;info&gt;2&lt;/info&gt;&lt;/SimpleCriterion&gt;&lt;/MultipleCriteria&gt;&lt;/MultipleCriteria&gt;&lt;/MultipleCriteria&gt;"; //$NON-NLS-1$
-        assertEquals(xml, XmlUtil.transformStringToXml(value));
-        assertEquals(value, XmlUtil.transformXmlToString(xml));
-    }
-}
diff --git a/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/actions/BrowseRecordsAction.java b/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/actions/BrowseRecordsAction.java
index fd4ba21cdb..b0ee0b0fa7 100644
--- a/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/actions/BrowseRecordsAction.java
+++ b/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/actions/BrowseRecordsAction.java
@@ -29,10 +29,9 @@
 
 import javax.xml.parsers.DocumentBuilder;
 
-import com.amalto.core.util.XtentisException;
 import org.apache.commons.lang.StringUtils;
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.dom4j.DocumentHelper;
 import org.json.JSONArray;
 import org.json.JSONObject;
@@ -96,7 +95,6 @@
 import org.w3c.dom.NodeList;
 import org.xml.sax.InputSource;
 
-import com.amalto.commons.core.utils.XMLUtils;
 import com.amalto.core.integrity.FKIntegrityCheckResult;
 import com.amalto.core.objects.ItemPOJOPK;
 import com.amalto.core.objects.UpdateReportPOJO;
@@ -118,6 +116,7 @@
 import com.amalto.core.util.LocaleUtil;
 import com.amalto.core.util.Messages;
 import com.amalto.core.util.MessagesFactory;
+import com.amalto.core.util.XtentisException;
 import com.amalto.core.webservice.WSBoolean;
 import com.amalto.core.webservice.WSByteArray;
 import com.amalto.core.webservice.WSConceptKey;
@@ -166,7 +165,6 @@
 import com.amalto.webapp.core.util.DataModelAccessor;
 import com.amalto.webapp.core.util.Util;
 import com.amalto.webapp.core.util.Webapp;
-import com.amalto.webapp.core.util.XmlUtil;
 import com.extjs.gxt.ui.client.Style.SortDir;
 import com.sun.xml.xsom.XSAnnotation;
 import com.sun.xml.xsom.XSComplexType;
@@ -656,7 +654,7 @@ public EntityModel setDefaultValueByExpression(EntityModel entityModel, String c
         DisplayRuleEngine ruleEngine = new DisplayRuleEngine(entityModel.getMetaDataTypes(), concept);
         TypeModel typeModel = entityModel.getMetaDataTypes().get(concept);
         Document doc = org.talend.mdm.webapp.browserecords.server.util.CommonUtil.getSubXML(typeModel, null, null, language);
-        org.dom4j.Document doc4j = XmlUtil.parseDocument(doc);
+        org.dom4j.Document doc4j = parseDocument(doc);
         List<RuleValueItem> list = ruleEngine.execDefaultValueRule(doc4j);
         for (RuleValueItem item : list) {
             String xPath = item.getXpath().replaceAll("\\[\\d+\\]", ""); //$NON-NLS-1$//$NON-NLS-2$
@@ -1324,7 +1322,7 @@ public ItemNodeModel getItemNodeModel(ItemBean item, EntityModel entity, boolean
             isModelUpdated = false;
             ItemNodeModel itemModel = builderNode(multiNodeIndex, root, entity,
                     "", "", true, foreignKeyDeleteMessage, false, isStaging, language); //$NON-NLS-1$ //$NON-NLS-2$
-            DynamicLabelUtil.getDynamicLabel(XmlUtil.parseDocument(doc), "", itemModel, metaDataTypes, language); //$NON-NLS-1$
+            DynamicLabelUtil.getDynamicLabel(parseDocument(doc), "", itemModel, metaDataTypes, language); //$NON-NLS-1$
             itemModel.set("time", item.get("time")); //$NON-NLS-1$ //$NON-NLS-2$
             itemModel.set("foreignKeyDeleteMessage", foreignKeyDeleteMessage.toString()); //$NON-NLS-1$
             if (isModelUpdated) {
@@ -1356,7 +1354,7 @@ public ItemNodeModel createDefaultItemNodeModel(ViewBean viewBean, Map<String, L
             Document doc = org.talend.mdm.webapp.browserecords.server.util.CommonUtil.getSubXML(typeModel, null, initDataMap,
                     language);
 
-            org.dom4j.Document doc4j = XmlUtil.parseDocument(doc);
+            org.dom4j.Document doc4j = parseDocument(doc);
 
             ruleEngine.execDefaultValueRule(doc4j);
 
@@ -1405,7 +1403,7 @@ public ItemNodeModel createSubItemNodeModel(ViewBean viewBean, String xml, Strin
             TypeModel typeModel = metaDataTypes.get(typePath);
             org.dom4j.Document mainDoc = DocumentHelper.parseText(xml);
 
-            org.dom4j.Document subDoc = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+            org.dom4j.Document subDoc = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                     .getSubXML(typeModel, realType, null, language));
 
             org.dom4j.Document doc4j = org.talend.mdm.webapp.base.server.util.XmlUtil.mergeDoc(mainDoc, subDoc, contextPath);
@@ -2201,7 +2199,7 @@ private void extractUsingTransformerThroughView(String concept, String viewName,
                         }
                     }
                 }
-                itemBean.setItemXml(XMLUtils.nodeToString(wsItemDoc, true, true));
+                itemBean.setItemXml(MDMXMLUtils.nodeToString(wsItemDoc, true, true));
             }
         }
     }
@@ -2500,16 +2498,16 @@ private boolean isValidGoldenStatus(WSDataClusterPK wsDataClusterPK, String conc
     public List<String> transformFunctionValue(List<String> functionList) throws ServiceException {
         try {
             List<String> escapedFunctionList = functionList.stream().map((String functionName) -> {
-                return XmlUtil.escapeXml(XmlUtil.unescapeXml(functionName));
+                return MDMXMLUtils.escapeXml(MDMXMLUtils.unescapeXml(functionName));
             }).collect(Collectors.toList());
 
-            Document doc = XMLUtils.parse("<result></result>"); //$NON-NLS-1$;
+            Document doc = MDMXMLUtils.parseXml("<result></result>"); //$NON-NLS-1$;
             Element element = doc.getDocumentElement();
             for (String function : escapedFunctionList) {
                 element.appendChild(doc.createElement("functionName")); //$NON-NLS-1$;
             }
 
-            org.dom4j.Document doc4j = XmlUtil.parseDocument(doc);
+            org.dom4j.Document doc4j = parseDocument(doc);
 
             DisplayRuleEngine ruleEngine = new DisplayRuleEngine(null, null);
             ruleEngine.setFuncitonList(escapedFunctionList);
@@ -2519,4 +2517,12 @@ public List<String> transformFunctionValue(List<String> functionList) throws Ser
             throw new ServiceException(e.getLocalizedMessage());
         }
     }
+
+    private static org.dom4j.Document parseDocument(org.w3c.dom.Document doc) {
+        if (doc == null) {
+            return (null);
+        }
+        org.dom4j.io.DOMReader xmlReader = new org.dom4j.io.DOMReader();
+        return (xmlReader.read(doc));
+    }
 }
diff --git a/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/ruleengine/DisplayRuleEngine.java b/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/ruleengine/DisplayRuleEngine.java
index 82f35deb7a..7eb9cce0fb 100644
--- a/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/ruleengine/DisplayRuleEngine.java
+++ b/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/ruleengine/DisplayRuleEngine.java
@@ -23,13 +23,13 @@
 import org.dom4j.Namespace;
 import org.dom4j.Node;
 import org.dom4j.QName;
+import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.talend.mdm.webapp.base.shared.ExpressionUtil;
 import org.talend.mdm.webapp.base.shared.TypeModel;
 import org.talend.mdm.webapp.browserecords.client.util.CommonUtil;
 import org.talend.mdm.webapp.browserecords.shared.VisibleRuleResult;
 
 import com.amalto.commons.core.utils.XMLUtils;
-import com.amalto.webapp.core.util.XmlUtil;
 
 public class DisplayRuleEngine {
 
@@ -231,7 +231,7 @@ private String genDefaultValueStyle(String concept, String xpath, String default
             style.append("<xsl:when test=\"not(text())\">"); //$NON-NLS-1$
         }
 
-        style.append("<xsl:value-of select=\"").append(XmlUtil.escapeXml(defaultValueRule)).append("\"/>"); //$NON-NLS-1$ //$NON-NLS-2$
+        style.append("<xsl:value-of select=\"").append(MDMXMLUtils.escapeXml(defaultValueRule)).append("\"/>"); //$NON-NLS-1$ //$NON-NLS-2$
         style.append("</xsl:when> "); //$NON-NLS-1$
         style.append("<xsl:otherwise>"); //$NON-NLS-1$
         style.append("<xsl:value-of select=\".\"/>"); //$NON-NLS-1$
@@ -265,7 +265,7 @@ public static String genVisibleRuleStyle(String concept, String xpath, String vi
             style.append("<xsl:if test=\"position()=").append(pathIndex).append("\">");
         }
         style.append("<xsl:choose>"); //$NON-NLS-1$
-        style.append("<xsl:when test=\"not(").append(getPureValue(XmlUtil.escapeXml(visibleExpression))).append(")\">"); //$NON-NLS-1$ //$NON-NLS-2$
+        style.append("<xsl:when test=\"not(").append(getPureValue(MDMXMLUtils.escapeXml(visibleExpression))).append(")\">"); //$NON-NLS-1$ //$NON-NLS-2$
         style.append("<xsl:attribute name=\"t:visible\">false</xsl:attribute>"); //$NON-NLS-1$
         style.append("</xsl:when>"); //$NON-NLS-1$
         style.append("<xsl:otherwise>"); //$NON-NLS-1$
@@ -350,7 +350,7 @@ private String generateFKFilterStyle(String xpath, List<String> functionNameList
             style.append("<xsl:copy>"); //$NON-NLS-1$
             style.append("<xsl:choose>"); //$NON-NLS-1$
             style.append("<xsl:when test=\"not(text())\">"); //$NON-NLS-1$
-            style.append("<xsl:value-of select=\"").append(XmlUtil.escapeXml(iterator.next()))
+            style.append("<xsl:value-of select=\"").append(MDMXMLUtils.escapeXml(iterator.next()))
                     .append("\"/>"); //$NON-NLS-1$ //$NON-NLS-2$
             style.append("</xsl:when> "); //$NON-NLS-1$
             style.append("<xsl:otherwise>"); //$NON-NLS-1$
diff --git a/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/service/UploadService.java b/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/service/UploadService.java
index cc3f681f02..1eb1a17da5 100644
--- a/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/service/UploadService.java
+++ b/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/service/UploadService.java
@@ -57,7 +57,6 @@
 import com.amalto.core.webservice.WSPutItem;
 import com.amalto.core.webservice.WSPutItemWithReport;
 import com.amalto.webapp.core.util.Util;
-import com.amalto.webapp.core.util.XmlUtil;
 import com.amalto.webapp.core.util.XtentisWebappException;
 
 public class UploadService {
@@ -224,7 +223,7 @@ private List<WSPutItemWithReport> readExcelFile(FileInputStream fileInputStream)
                         rowNumber--;
                         continue;
                     }
-                    document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil.getSubXML(
+                    document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil.getSubXML(
                             typeModel, null, null, language));
                 }
                 Element currentElement = document.getRootElement();
@@ -311,7 +310,7 @@ private List<WSPutItemWithReport> readCsvFile(FileInputStream fileInputStream) t
                         rowNumber--;
                         continue;
                     }
-                    document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil.getSubXML(
+                    document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil.getSubXML(
                             typeModel, null, null, language));
                 }
                 Element currentElement = document.getRootElement();
@@ -741,7 +740,7 @@ private String extractForeignKey(String value, String separator) {
 
     private void setFieldValue(Element currentElement, String value) throws Exception {
         if (currentElement.elements() != null && currentElement.elements().size() > 0) {
-            Element complexeElement = XmlUtil.parseDocument(Util.parse(StringEscapeUtils.unescapeXml(value))).getRootElement();
+            Element complexeElement = parseDocument(Util.parse(StringEscapeUtils.unescapeXml(value))).getRootElement();
             List<Element> contentList = currentElement.getParent().elements();
             int index = contentList.indexOf(currentElement);
             contentList.remove(currentElement);
@@ -768,4 +767,12 @@ protected String getCurrentDataCluster() throws Exception {
     protected String getCurrentDataModel() throws Exception {
         return org.talend.mdm.webapp.browserecords.server.util.CommonUtil.getCurrentDataModel();
     }
+
+    private static Document parseDocument(org.w3c.dom.Document doc) {
+        if (doc == null) {
+            return (null);
+        }
+        org.dom4j.io.DOMReader xmlReader = new org.dom4j.io.DOMReader();
+        return (xmlReader.read(doc));
+    }
 }
diff --git a/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/util/DynamicLabelUtil.java b/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/util/DynamicLabelUtil.java
index c6272edf95..d1c36921a7 100644
--- a/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/util/DynamicLabelUtil.java
+++ b/org.talend.mdm.webapp.browserecords/src/main/java/org/talend/mdm/webapp/browserecords/server/util/DynamicLabelUtil.java
@@ -21,6 +21,7 @@
 import org.dom4j.Attribute;
 import org.dom4j.Document;
 import org.dom4j.Element;
+import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.talend.mdm.webapp.base.shared.TypeModel;
 import org.talend.mdm.webapp.browserecords.client.model.ItemNodeModel;
 import org.talend.mdm.webapp.browserecords.client.util.CommonUtil;
@@ -36,7 +37,6 @@
 import com.amalto.core.webservice.WSItemPK;
 import com.amalto.webapp.core.bean.Configuration;
 import com.amalto.webapp.core.util.Util;
-import com.amalto.webapp.core.util.XmlUtil;
 import com.sun.xml.xsom.XSAnnotation;
 import com.sun.xml.xsom.XSComplexType;
 import com.sun.xml.xsom.XSElementDecl;
@@ -69,7 +69,7 @@ public static void getDynamicLabel(Document parsedDocument, String baseXpath, It
             if (org.talend.mdm.webapp.base.server.util.DynamicLabelUtil.isDynamicLabel(label)) {
                 label = replaceForeignPath(fullxpath, label, parsedDocument);
                 String stylesheet = org.talend.mdm.webapp.base.server.util.DynamicLabelUtil.genStyle(fullxpath,
-                        XmlUtil.escapeXml(label));
+                        MDMXMLUtils.escapeXml(label));
                 String dynamicLB = org.talend.mdm.webapp.base.server.util.DynamicLabelUtil.getParsedLabel(XMLUtils.styleDocument(
                         parsedDocument, stylesheet));
                 // @temp yguo, set the properties to itemmodel
diff --git a/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/actions/BrowseRecordsActionTest.java b/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/actions/BrowseRecordsActionTest.java
index de00a7208c..6760472c73 100644
--- a/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/actions/BrowseRecordsActionTest.java
+++ b/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/actions/BrowseRecordsActionTest.java
@@ -104,7 +104,6 @@
 import com.amalto.core.webservice.WSWhereCondition;
 import com.amalto.core.webservice.XtentisPort;
 import com.amalto.webapp.core.bean.Configuration;
-import com.amalto.webapp.core.util.XmlUtil;
 import com.extjs.gxt.ui.client.data.ModelData;
 
 import junit.framework.TestCase;
@@ -1034,8 +1033,7 @@ public ItemNodeModel mock_createDefaultItemNodeModel(ViewBean viewBean, Map<Stri
             Document doc = org.talend.mdm.webapp.browserecords.server.util.CommonUtil.getSubXML(typeModel, null, initDataMap,
                     language);
 
-            org.dom4j.Document doc4j = XmlUtil.parseDocument(doc);
-
+            org.dom4j.Document doc4j = (doc != null) ? new org.dom4j.io.DOMReader().read(doc) : null;
             ruleEngine.execDefaultValueRule(doc4j);
 
             if (initDataMap != null) {
diff --git a/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/service/UploadServiceTest.java b/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/service/UploadServiceTest.java
index 92f378cda7..990f02f98e 100644
--- a/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/service/UploadServiceTest.java
+++ b/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/service/UploadServiceTest.java
@@ -45,7 +45,6 @@
 
 import com.amalto.core.util.Util;
 import com.amalto.core.webservice.WSPutItemWithReport;
-import com.amalto.webapp.core.util.XmlUtil;
 import com.amalto.webapp.core.util.XtentisWebappException;
 
 import junit.framework.TestCase;
@@ -422,7 +421,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                 continue;
             } else if (rowNumber == 2) {
                 // case 1 Test foreign key value with bracket like [FK1]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -432,7 +431,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 3) {
                 // case 2 Test foreign key value without bracket like [FK1-AAA]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -442,7 +441,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 4) {
                 // case 3 Test foreign key value without bracket like [FK1-AAA-BBB]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -452,7 +451,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 5) {
                 // case 4 Test foreign key value without bracket like FK1
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -481,7 +480,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 2) {
                 // case 4 Test foreign key value with info and bracket
                 // [FK1]|FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -493,7 +492,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 3) {
                 // case 5 Test foreign key value with info and bracket
                 // [FK1|AAA]|FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -505,7 +504,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 4) {
                 // case 5 Test foreign key value with info and bracket
                 // [FK1|AAA|BBB]|FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -517,7 +516,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 5) {
                 // case 6 Test foreign key value with info and bracket
                 // [FK1]-FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -529,7 +528,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 6) {
                 // case 7 Test foreign key value with info and bracket
                 // [FK1-AAA]-FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -541,7 +540,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 7) {
                 // case 7 Test foreign key value with info and bracket
                 // [FK1-AAA-BBB]-FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -553,7 +552,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 8) {
                 // case 8 Test foreign key value with info and bracket
                 // [FK1]|FKInfo|FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -565,7 +564,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 9) {
                 // case 9 Test foreign key value with info and bracket
                 // [FK1|AAA]|FKInfo|FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -577,7 +576,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 10) {
                 // case 9 Test foreign key value with info and bracket
                 // [FK1|AAA|BBB]|FKInfo|FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -589,7 +588,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 11) {
                 // case 10 Test foreign key value with info and bracket
                 // [FK1]-FKInfo-FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -601,7 +600,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 12) {
                 // case 11 Test foreign key value with info and bracket
                 // [FK1-AAA]-FKInfo-FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -613,7 +612,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 13) {
                 // case 11 Test foreign key value with info and bracket
                 // [FK1-AAA-BBB]-FKInfo-FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -625,7 +624,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 14) {
                 // case 12 Test foreign key value with info without bracket
                 // FK1|FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -637,7 +636,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 15) {
                 // case 13 Test foreign key value with info without bracket
                 // FK1-FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -649,7 +648,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 16) {
                 // case 14 Test foreign key value with info without bracket
                 // FK1|FKInfo|FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -661,7 +660,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 17) {
                 // case 15 Test foreign key value with info without bracket
                 // FK1-FKInfo-FKInfo
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -690,7 +689,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                 continue;
             } else if (rowNumber == 2) {
                 // case 16 Test multiple foreign key value with bracket like [FK1]|[FK2]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -701,7 +700,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 3) {
                 // case 17 Test multiple foreign key value with bracket like [FK1|AAA]|[FK2|AAA]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -712,7 +711,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 4) {
                 // case 18 Test multiple foreign key value with bracket like [FK1AAA]|[FK2|AAA]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -723,7 +722,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 5) {
                 // case 19 Test multiple foreign key value with bracket like [FK1|AAA]|[FK2AAA]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -734,7 +733,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 6) {
                 // case 19 Test multiple foreign key value with bracket like [FK1|AAA|BBB]|[FK2|AAA]|[FK3AAA]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -745,7 +744,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 7) {
                 // case 19 Test multiple foreign key value with bracket like [FK1|AAA|BBB]|[FK2AAA]|[FK3|AAA|BBB]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -756,7 +755,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 8) {
                 // case 20 Test multiple foreign key value without bracket like FK1|FK2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -786,7 +785,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 2) {
                 // case 21 Test multiple foreign key value with info with bracket
                 // [FK1]|FKInfo1|[FK2]|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -798,7 +797,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 3) {
                 // case 22 Test multiple foreign key value with info with bracket
                 // [FK1|AAA]|FKInfo1|[FK2|AAA]|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -810,7 +809,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 4) {
                 // case 23 Test multiple foreign key value with info with bracket
                 // [FK1|AAA|BBB]|FKInfo1|[FK2|AAA|BBB]|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -822,7 +821,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 5) {
                 // case 23 Test multiple foreign key value with info with bracket
                 // [FK1|AAA|BBB]|FKInfo1|[FK2|AAA|BBB]|FKInfo2|[FK3|AAA|BBB]|FKInfo3
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -834,7 +833,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 6) {
                 // case 23 Test multiple foreign key value with info with bracket
                 // [FK1AAA]|FKInfo1|[FK2|AAA]|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -846,7 +845,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 7) {
                 // case 24 Test multiple foreign key value with info with bracket
                 // [FK1|AAA]|FKInfo1|[FK2AAA]|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -858,7 +857,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 8) {
                 // case 25 Test multiple foreign key value with info with bracket
                 // [FK1]|FKInfo1|FKInfo2|[FK2]|FKInfo1|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -870,7 +869,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 9) {
                 // case 26 Test multiple foreign key value with info with bracket
                 // [FK1|AAA]|FKInfo1|FKInfo2|[FK2|AAA]|FKInfo1|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -882,7 +881,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 10) {
                 // case 27 Test multiple foreign key value with info with bracket
                 // [FK1AAA]|FKInfo1|FKInfo2|[FK2|AAA]|FKInfo1|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -894,7 +893,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 11) {
                 // case 28 Test multiple foreign key value with info with bracket
                 // [FK1|AAA]|FKInfo1|FKInfo2|[FK2AAA]|FKInfo1|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -906,7 +905,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 12) {
                 // case 29 Test multiple foreign key value with info with bracket
                 // [FK1]-FKInfo1|[FK2]-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -918,7 +917,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 13) {
                 // case 30 Test multiple foreign key value with info with bracket
                 // [FK1-AAA]-FKInfo1|[FK2-AAA]-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -930,7 +929,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 14) {
                 // case 30 Test multiple foreign key value with info with bracket
                 // [FK1-AAA]-FKInfo1|[FK2-BBB]-FKInfo2|[FK3-CCC]-FKInfo3
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -942,7 +941,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 15) {
                 // case 30 Test multiple foreign key value with info with bracket
                 // [FK1-AA-AAA]-FKInfo1|[FK2-BB-BBB]-FKInfo2|[FK2-CC-CCC]-FKInfo3
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -954,7 +953,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 16) {
                 // case 31 Test multiple foreign key value with info with bracket
                 // [FK1AAA]-FKInfo1|[FK2-AAA]-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -966,7 +965,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 17) {
                 // case 32 Test multiple foreign key value with info with bracket
                 // [FK1-AAA]-FKInfo1|[FK2AAA]-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -978,7 +977,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 18) {
                 // case 33 Test multiple foreign key value with info with bracket
                 // [FK1]-FKInfo1-FKInfo2|[FK2]-FKInfo1-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -990,7 +989,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 19) {
                 // case 34 Test multiple foreign key value with info with bracket
                 // [FK1-AAA]-FKInfo1-FKInfo2|[FK2-AAA]-FKInfo1-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1002,7 +1001,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 20) {
                 // case 34 Test multiple foreign key value with info with bracket
                 // [FK1AAA]-FKInfo1-FKInfo2|[FK2-AAA]-FKInfo1-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1014,7 +1013,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 21) {
                 // case 35 Test multiple foreign key value with info with bracket
                 // [FK1-AAA]-FKInfo1-FKInfo2|[FK2AAA]-FKInfo1-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1043,7 +1042,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                 continue;
             } else if (rowNumber == 2) {
                 // case 36 Test composite foreign key value with bracket like [FK11][FK12]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1054,7 +1053,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 3) {
                 // case 37 Test composite foreign key value with bracket like [FK11|AAA][FK12|AAA]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1065,7 +1064,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 4) {
                 // case 38 Test composite foreign key value with bracket like [FK11-AAA][FK12-AAA]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1076,7 +1075,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 5) {
                 // case 39 Test composite foreign key value with bracket like [FK11-AAA][FK12-AAA]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1106,7 +1105,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 2) {
                 // case 40 Test composite foreign key value with info with bracket
                 // 1 [FK1][FK2]|FKInfo1
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1118,7 +1117,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 3) {
                 // case 41 Test composite foreign key value with info with bracket
                 // 1 [FK1|AAA][FK2|AAA]|FKInfo1
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1130,7 +1129,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 4) {
                 // case 42 Test composite foreign key value with info with bracket
                 // 2 [FK1][FK2]|FKInfo1|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1142,7 +1141,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 5) {
                 // case 43 Test composite foreign key value with info with bracket
                 // 2 [FK1|AAA][FK2|AAA]|FKInfo1|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1154,7 +1153,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 6) {
                 // case 44 Test composite foreign key value with info with bracket
                 // 3 [FK1][FK2]-FKInfo1
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1166,7 +1165,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 7) {
                 // case 45 Test composite foreign key value with info with bracket
                 // 3 [FK1-AAA][FK2-AAA]-FKInfo1
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1178,7 +1177,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 8) {
                 // case 46 Test composite foreign key value with info with bracket
                 // 4 [FK1][FK2]-FKInfo1-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1190,7 +1189,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 9) {
                 // case 47 Test composite foreign key value with info with bracket
                 // 4 [FK1-AAA][FK2-AAA]-FKInfo1-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1219,7 +1218,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                 continue;
             } else if (rowNumber == 2) {
                 // case 48 Test multiple composite foreign key value with bracket like [FK11][FK12]|[FK21][FK22]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1230,7 +1229,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 3) {
                 // case 49 Test multiple composite foreign key value with bracket like [FK11|AAA][FK12]|[FK21][FK22]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1241,7 +1240,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 4) {
                 // case 50 Test multiple composite foreign key value with bracket like [FK11][FK12|AAA]|[FK21][FK22]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1252,7 +1251,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 5) {
                 // case 51 Test multiple composite foreign key value with bracket like [FK11][FK12]|[FK21|AAA][FK22]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1263,7 +1262,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 6) {
                 // case 52 Test multiple composite foreign key value with bracket like [FK11][FK12]|[FK21][FK22|AAA]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1275,7 +1274,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 7) {
                 // case 53 Test multiple composite foreign key value with bracket like
                 // [FK11|AAA][FK12|AAA]|[FK21|AAA][FK22|AAA]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1286,7 +1285,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 8) {
                 // case 54 Test multiple composite foreign key value with bracket like [FK11-AAA][FK12-AAA]|[FK21][FK22]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1297,7 +1296,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 9) {
                 // case 55 Test multiple composite foreign key value with bracket like [FK11][FK12-AAA]|[FK21-AAA][FK22]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1308,7 +1307,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 10) {
                 // case 56 Test multiple composite foreign key value with bracket like [FK11][FK12]|[FK21-AAA][FK22-AAA]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1319,7 +1318,7 @@ public void testGetForeignKeyVlaue() throws Exception {
                         document.asXML());
             } else if (rowNumber == 11) {
                 // case 57 Test multiple composite foreign key value with bracket like [FK11-AAA][FK12]|[FK21][FK22-AAA]
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFK"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1349,7 +1348,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 2) {
                 // case 58 Test multiple composite foreign key value with info without bracket like
                 // [FK11][FK12]|FKInfo1|[FK21][FK22]|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1361,7 +1360,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 3) {
                 // case 59 Test multiple composite foreign key value with info without bracket like
                 // [FK11|AAA][FK12]|FKInfo1|[FK21][FK22|AAA]|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1373,7 +1372,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 4) {
                 // case 60 Test multiple composite foreign key value with info without bracket like
                 // [FK11][FK12|AAA]|FKInfo1|[FK21|AAA][FK22]|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1385,7 +1384,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 5) {
                 // case 61 Test multiple composite foreign key value with info without bracket like
                 // [FK11][FK12]|FKInfo1|FKInfo2|[FK21][FK22]|FKInfo1|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1397,7 +1396,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 6) {
                 // case 62 Test multiple composite foreign key value with info without bracket like
                 // [FK11|AAA][FK12]|FKInfo1|FKInfo2|[FK21][FK22|AAA]|FKInfo1|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1409,7 +1408,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 7) {
                 // case 63 Test multiple composite foreign key value with info without bracket like
                 // [FK11|AAA][FK12]|FKInfo1|FKInfo2|[FK21|AAA][FK22]|FKInfo1|FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1421,7 +1420,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 8) {
                 // case 64 Test multiple composite foreign key value with info without bracket like
                 // [FK11][FK12]-FKInfo1|[FK21][FK22]-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1433,7 +1432,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 9) {
                 // case 65 Test multiple composite foreign key value with info without bracket like
                 // [FK11][FK12-AAA]-FKInfo1|[FK21][FK22-AAA]-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1445,7 +1444,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 10) {
                 // case 66 Test multiple composite foreign key value with info without bracket like
                 // [FK11-AAA][FK12]-FKInfo1|[FK21-AAA][FK22]-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1457,7 +1456,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 11) {
                 // case 67 Test multiple composite foreign key value with info without bracket like
                 // [FK11][FK12]-FKInfo1-FKInfo2|[FK21][FK22]-FKInfo1-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1469,7 +1468,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 12) {
                 // case 68 Test multiple composite foreign key value with info without bracket like
                 // [FK11-AAA][FK12]-FKInfo1-FKInfo2|[FK21][FK22-AAA]-FKInfo1-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1481,7 +1480,7 @@ public void testGetForeignKeyVlaue() throws Exception {
             } else if (rowNumber == 13) {
                 // case 69 Test multiple composite foreign key value with info without bracket like
                 // [FK11-AAA][FK12-AAA]-FKInfo1-FKInfo2|[FK21][FK22]-FKInfo1-FKInfo2
-                document = XmlUtil.parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
+                document = parseDocument(org.talend.mdm.webapp.browserecords.server.util.CommonUtil
                         .getSubXML(entityModel.getTypeModel("TestMultipleCompositeFKWithInfo"), null, null, "en"));
                 Element currentElement = document.getRootElement();
                 service.resetMultiNodeMap();
@@ -1552,4 +1551,12 @@ public void resetMultiNodeMap() {
             this.multiNodeMap = new HashMap<String, List<Element>>();
         }
     }
+
+    private static org.dom4j.Document parseDocument(org.w3c.dom.Document doc) {
+        if (doc == null) {
+            return (null);
+        }
+        org.dom4j.io.DOMReader xmlReader = new org.dom4j.io.DOMReader();
+        return (xmlReader.read(doc));
+    }
 }
diff --git a/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/util/CommonUtilTest.java b/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/util/CommonUtilTest.java
index ac0f1943c4..61d0d0d272 100644
--- a/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/util/CommonUtilTest.java
+++ b/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/util/CommonUtilTest.java
@@ -16,16 +16,12 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashMap;
-import java.util.HashSet;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 
-import junit.framework.TestCase;
-import junit.framework.TestSuite;
-
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.dom4j.Node;
 import org.mockito.Mockito;
 import org.powermock.api.mockito.PowerMockito;
@@ -50,10 +46,10 @@
 import org.w3c.dom.Element;
 import org.xml.sax.SAXException;
 
-import com.amalto.core.util.LocalUser;
 import com.amalto.core.util.Util;
-import com.amalto.webapp.core.util.XmlUtil;
-import com.google.gwt.user.client.rpc.core.java.util.Collections;
+
+import junit.framework.TestCase;
+import junit.framework.TestSuite;
 
 @PrepareForTest({ Util.class })
 @SuppressWarnings("nls")
@@ -118,7 +114,7 @@ public void testGetSubXML() {
         DisplayRuleEngine ruleEngine = new DisplayRuleEngine(metaDataTypes, "Eda"); //$NON-NLS-1
         org.dom4j.Document doc4j = null;
         try {
-            doc4j = XmlUtil.parseDocument(doc);
+            doc4j = (doc != null) ? new org.dom4j.io.DOMReader().read(doc) : null;
         } catch (Exception e) {
             LOG.debug("assert no exception, please check XmlUtil.parseDocument(Document)", e); //$NON-NLS-1
         }
@@ -314,8 +310,7 @@ public void testGetDefaultXML() throws Exception {
         assertNotNull(rootModel);
         Document doc = CommonUtil.getSubXML(rootModel, null, null, language);
         assertNotNull(doc);
-
-        org.dom4j.Document doc4j = XmlUtil.parseDocument(doc);
+        org.dom4j.Document doc4j = (doc != null) ? new org.dom4j.io.DOMReader().read(doc) : null;
         assertNotNull(doc4j);
         String expectedXML = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
                 + "<e xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><id/><b xsi:type=\"a2\"><subelement/></b></e>";
diff --git a/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/util/DynamicLabelUtilTest.java b/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/util/DynamicLabelUtilTest.java
index ed16162b2a..d2de7b12dd 100644
--- a/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/util/DynamicLabelUtilTest.java
+++ b/org.talend.mdm.webapp.browserecords/src/test/java/org/talend/mdm/webapp/browserecords/server/util/DynamicLabelUtilTest.java
@@ -28,6 +28,7 @@
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.powermock.modules.junit3.PowerMockSuite;
 import org.talend.mdm.commmon.util.core.MDMConfiguration;
+import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.talend.mdm.commmon.util.datamodel.management.DataModelID;
 import org.talend.mdm.webapp.base.client.model.ForeignKeyBean;
 import org.talend.mdm.webapp.base.server.util.XmlUtil;
@@ -136,7 +137,7 @@ private void mock_getDynamicLabel(Document parsedDocument, String baseXpath, Ite
             // Mock replaceForeignPath
             label = mock_replaceForeignPath(fullxpath, label, parsedDocument);
             String stylesheet = org.talend.mdm.webapp.base.server.util.DynamicLabelUtil.genStyle(fullxpath,
-                    com.amalto.webapp.core.util.XmlUtil.escapeXml(label));
+                    MDMXMLUtils.escapeXml(label));
             String dynamicLB = org.talend.mdm.webapp.base.server.util.DynamicLabelUtil.getParsedLabel(XMLUtils.styleDocument(
                     parsedDocument, stylesheet));
             itemModel.setDynamicLabel(dynamicLB);
diff --git a/org.talend.mdm.webapp.core/src/main/java/com/amalto/webapp/core/bean/Configuration.java b/org.talend.mdm.webapp.core/src/main/java/com/amalto/webapp/core/bean/Configuration.java
index 1c682c1cff..5b744ba562 100644
--- a/org.talend.mdm.webapp.core/src/main/java/com/amalto/webapp/core/bean/Configuration.java
+++ b/org.talend.mdm.webapp.core/src/main/java/com/amalto/webapp/core/bean/Configuration.java
@@ -12,14 +12,14 @@
 import javax.servlet.http.HttpSession;
 
 import org.apache.commons.lang.StringUtils;
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
 import org.w3c.dom.Node;
 import org.w3c.dom.NodeList;
 
-import com.amalto.commons.core.utils.XMLUtils;
 import com.amalto.core.delegator.ILocalUser;
 import com.amalto.core.util.LocalUser;
 import com.amalto.core.util.SessionContextHolder;
@@ -124,11 +124,11 @@ private static void store(String cluster, String model) throws Exception {
             Util.getPort()
                     .putItem(
                             new WSPutItem(
-                                    new WSDataClusterPK("PROVISIONING"), XMLUtils.nodeToString(d.getDocumentElement(), true, true).replaceAll( //$NON-NLS-1$
+                                    new WSDataClusterPK("PROVISIONING"), MDMXMLUtils.nodeToString(d.getDocumentElement(), true, true).replaceAll( //$NON-NLS-1$
                                                     "<\\?xml.*?\\?>", ""), new WSDataModelPK("PROVISIONING"), false)); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
         } else {
             Util.storeProvisioning(LocalUser.getLocalUser().getIdentity(),
-                    XMLUtils.nodeToString(d.getDocumentElement(), true, true).replaceAll("<\\?xml.*?\\?>", "")); //$NON-NLS-1$ //$NON-NLS-2$
+                    MDMXMLUtils.nodeToString(d.getDocumentElement(), true, true).replaceAll("<\\?xml.*?\\?>", "")); //$NON-NLS-1$ //$NON-NLS-2$
         }
     }
 
diff --git a/org.talend.mdm.webapp.core/src/main/java/com/amalto/webapp/core/util/Util.java b/org.talend.mdm.webapp.core/src/main/java/com/amalto/webapp/core/util/Util.java
index 01c497b575..4cae9b37ef 100644
--- a/org.talend.mdm.webapp.core/src/main/java/com/amalto/webapp/core/util/Util.java
+++ b/org.talend.mdm.webapp.core/src/main/java/com/amalto/webapp/core/util/Util.java
@@ -12,9 +12,6 @@
 import java.io.BufferedReader;
 import java.io.InputStreamReader;
 import java.io.StringReader;
-import java.io.UnsupportedEncodingException;
-import java.security.MessageDigest;
-import java.security.NoSuchAlgorithmException;
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Collection;
@@ -30,8 +27,8 @@
 import javax.xml.parsers.DocumentBuilderFactory;
 
 import org.apache.commons.lang.ArrayUtils;
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.talend.mdm.commmon.util.datamodel.management.BusinessConcept;
 import org.w3c.dom.DOMImplementation;
@@ -41,7 +38,6 @@
 import org.w3c.dom.NodeList;
 import org.xml.sax.InputSource;
 
-import com.amalto.commons.core.utils.XMLUtils;
 import com.amalto.core.delegator.BeanDelegatorContainer;
 import com.amalto.core.delegator.ILocalUser;
 import com.amalto.core.objects.transformers.TransformerV2POJOPK;
@@ -808,7 +804,7 @@ public static String getDefaultLanguage() throws Exception {
 
         WSItemPK itemPK = new WSItemPK(new WSDataClusterPK(DATACLUSTER_PK), PROVISIONING_CONCEPT, new String[] { identity });
         if (identity != null && identity.length() > 0) {
-            Document doc = XMLUtils.parse(Util.getPort().getItem(new WSGetItem(itemPK)).getContent());
+            Document doc = MDMXMLUtils.parseXml(Util.getPort().getItem(new WSGetItem(itemPK)).getContent());
             if (doc.getElementsByTagName("language") != null) { //$NON-NLS-1$
                 Node language = doc.getElementsByTagName("language").item(0); //$NON-NLS-1$
                 if (language != null) {
diff --git a/org.talend.mdm.webapp.core/src/main/java/com/amalto/webapp/core/util/XmlUtil.java b/org.talend.mdm.webapp.core/src/main/java/com/amalto/webapp/core/util/XmlUtil.java
deleted file mode 100644
index 374d9f492d..0000000000
--- a/org.talend.mdm.webapp.core/src/main/java/com/amalto/webapp/core/util/XmlUtil.java
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Copyright (C) 2006-2019 Talend Inc. - www.talend.com
- *
- * This source code is available under agreement available at
- * %InstallDIR%\features\org.talend.rcp.branding.%PRODUCTNAME%\%PRODUCTNAME%license.txt
- *
- * You should have received a copy of the agreement along with this program; if not, write to Talend SA 9 rue Pages
- * 92150 Suresnes, France
- */
-package com.amalto.webapp.core.util;
-
-import org.apache.commons.lang.StringEscapeUtils;
-import org.dom4j.Document;
-
-
-public class XmlUtil {
-
-    public static Document parseDocument(org.w3c.dom.Document doc) {
-        if (doc == null) {
-            return (null);
-        }
-        org.dom4j.io.DOMReader xmlReader = new org.dom4j.io.DOMReader();
-        return (xmlReader.read(doc));
-    }
-
-    public static String escapeXml(String value) {
-        if (value == null)
-            return null;
-        boolean isEscaped = false;
-        if (value.contains("&quot;") || //$NON-NLS-1$
-                value.contains("&amp;") || //$NON-NLS-1$
-                value.contains("&lt;") || //$NON-NLS-1$
-                value.contains("&gt;")) { //$NON-NLS-1$
-            isEscaped = true;
-        }
-        if (!isEscaped) {
-            value = StringEscapeUtils.escapeXml(value);
-        }
-        return value;
-    }
-
-    public static String unescapeXml(String value) {
-        if (value == null) {
-            return null;
-        }
-        return StringEscapeUtils.unescapeXml(value);
-    }
-}
diff --git a/org.talend.mdm.webapp.core/src/test/java/com/amalto/webapp/core/util/DataModelAccessorTest.java b/org.talend.mdm.webapp.core/src/test/java/com/amalto/webapp/core/util/DataModelAccessorTest.java
index f99b718add..bdd7fe92de 100644
--- a/org.talend.mdm.webapp.core/src/test/java/com/amalto/webapp/core/util/DataModelAccessorTest.java
+++ b/org.talend.mdm.webapp.core/src/test/java/com/amalto/webapp/core/util/DataModelAccessorTest.java
@@ -18,8 +18,6 @@
 import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.w3c.dom.Document;
 
-import com.amalto.commons.core.utils.XMLUtils;
-
 import junit.framework.TestCase;
 
 /**
@@ -52,7 +50,7 @@ private String getXSDModel(String filename) throws Exception {
         assertNotNull(is);
         DocumentBuilder builder = MDMXMLUtils.getDocumentBuilder().get();
         Document doc = builder.parse(is);
-        return XMLUtils.nodeToString(doc, true, true);
+        return MDMXMLUtils.nodeToString(doc, true, true);
     }
 
 }
diff --git a/org.talend.mdm.webapp.core/src/test/java/com/amalto/webapp/core/util/XmlUtilTest.java b/org.talend.mdm.webapp.core/src/test/java/com/amalto/webapp/core/util/XmlUtilTest.java
index 237780f7c2..8bbb096e3a 100644
--- a/org.talend.mdm.webapp.core/src/test/java/com/amalto/webapp/core/util/XmlUtilTest.java
+++ b/org.talend.mdm.webapp.core/src/test/java/com/amalto/webapp/core/util/XmlUtilTest.java
@@ -11,6 +11,7 @@
 package com.amalto.webapp.core.util;
 
 import org.junit.Test;
+import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 
 import static org.junit.Assert.*;
 
@@ -19,17 +20,17 @@ public class XmlUtilTest {
 
     @Test
     public void escapeXml() {
-        assertEquals(null, XmlUtil.escapeXml(null));
-        assertEquals("fn:concat(&quot;a&b&quot;, &quot;s&quot;)", XmlUtil.escapeXml("fn:concat(&quot;a&b&quot;, &quot;s&quot;)"));
+        assertEquals(null, MDMXMLUtils.escapeXml(null));
+        assertEquals("fn:concat(&quot;a&b&quot;, &quot;s&quot;)", MDMXMLUtils.escapeXml("fn:concat(&quot;a&b&quot;, &quot;s&quot;)"));
         assertEquals("fn:concat(&quot;a&amp;b&quot;, &quot;s&quot;)",
-                XmlUtil.escapeXml("fn:concat(&quot;a&amp;b&quot;, &quot;s&quot;)"));
-        assertEquals("fn:concat(&quot;a&amp;b&quot;, &quot;s&quot;)", XmlUtil.escapeXml("fn:concat(\"a&b\", \"s\")"));
+                MDMXMLUtils.escapeXml("fn:concat(&quot;a&amp;b&quot;, &quot;s&quot;)"));
+        assertEquals("fn:concat(&quot;a&amp;b&quot;, &quot;s&quot;)", MDMXMLUtils.escapeXml("fn:concat(\"a&b\", \"s\")"));
     }
 
     @Test
     public void unescapeXML() {
-        assertEquals(null, XmlUtil.unescapeXml(null));
-        assertEquals("fn:concat(\"a&b\", \"s\")", XmlUtil.unescapeXml("fn:concat(&quot;a&b&quot;, &quot;s&quot;)"));
-        assertEquals("fn:concat(\"a&b\", \"s\")", XmlUtil.unescapeXml("fn:concat(&quot;a&amp;b&quot;, &quot;s&quot;)"));
+        assertEquals(null, MDMXMLUtils.unescapeXml(null));
+        assertEquals("fn:concat(\"a&b\", \"s\")", MDMXMLUtils.unescapeXml("fn:concat(&quot;a&b&quot;, &quot;s&quot;)"));
+        assertEquals("fn:concat(\"a&b\", \"s\")", MDMXMLUtils.unescapeXml("fn:concat(&quot;a&amp;b&quot;, &quot;s&quot;)"));
     }
 }
\ No newline at end of file
diff --git a/org.talend.mdm.webapp.general/src/main/java/org/talend/mdm/webapp/general/server/util/Utils.java b/org.talend.mdm.webapp.general/src/main/java/org/talend/mdm/webapp/general/server/util/Utils.java
index 6fad6ba3a0..cd917a0410 100644
--- a/org.talend.mdm.webapp.general/src/main/java/org/talend/mdm/webapp/general/server/util/Utils.java
+++ b/org.talend.mdm.webapp.general/src/main/java/org/talend/mdm/webapp/general/server/util/Utils.java
@@ -19,8 +19,8 @@
 import javax.xml.parsers.DocumentBuilder;
 import javax.xml.parsers.ParserConfigurationException;
 
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.talend.mdm.webapp.base.client.exception.ServiceException;
 import org.talend.mdm.webapp.base.shared.Constants;
@@ -33,7 +33,6 @@
 import org.w3c.dom.NodeList;
 import org.xml.sax.SAXException;
 
-import com.amalto.commons.core.utils.XMLUtils;
 import com.amalto.core.delegator.ILocalUser;
 import com.amalto.core.util.LocalUser;
 import com.amalto.core.util.Menu;
@@ -322,16 +321,16 @@ public static List<GroupItem> getGroupItems(String language) throws IOException,
     }
 
     public static String setLanguage(String xml, String language) throws Exception {
-        Document doc = XMLUtils.parse(xml);
+        Document doc = MDMXMLUtils.parseXml(xml);
         if (doc.hasChildNodes()) {
             if (doc.getElementsByTagName("language").item(0) != null) { //$NON-NLS-1$
                 doc.getElementsByTagName("language").item(0).setTextContent(language); //$NON-NLS-1$
-                return XMLUtils.nodeToString(doc);
+                return MDMXMLUtils.nodeToString(doc);
             } else {
                 Element node = doc.createElement("language"); //$NON-NLS-1$
                 node.setTextContent(language);
                 doc.getDocumentElement().appendChild(node);
-                return XMLUtils.nodeToString(doc);
+                return MDMXMLUtils.nodeToString(doc);
             }
         }
         return xml;
diff --git a/org.talend.mdm.webapp.general/src/test/java/org/talend/mdm/webapp/general/server/util/UtilsTest.java b/org.talend.mdm.webapp.general/src/test/java/org/talend/mdm/webapp/general/server/util/UtilsTest.java
index 99bfc32fc8..6e11001ffc 100644
--- a/org.talend.mdm.webapp.general/src/test/java/org/talend/mdm/webapp/general/server/util/UtilsTest.java
+++ b/org.talend.mdm.webapp.general/src/test/java/org/talend/mdm/webapp/general/server/util/UtilsTest.java
@@ -23,6 +23,7 @@
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.powermock.modules.junit3.PowerMockSuite;
+import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 import org.talend.mdm.webapp.general.model.GroupItem;
 import org.talend.mdm.webapp.general.model.LanguageBean;
 import org.talend.mdm.webapp.general.server.actions.GeneralAction;
@@ -52,13 +53,13 @@ public void testSetLanguages() throws Exception {
     public void testAddLanguages() throws DOMException, TransformerException, ParserConfigurationException, IOException,
             SAXException {
         String xml = "<User></User>";
-        Document doc = XMLUtils.parse(xml);
+        Document doc = MDMXMLUtils.parseXml(xml);
         assertNull(doc.getElementsByTagName("language").item(0));
         Element node = doc.createElement("language");
         node.setTextContent("en");
         doc.getDocumentElement().appendChild(node);
-        String newXml = XMLUtils.nodeToString(doc);
-        assertEquals("en", XMLUtils.parse(newXml).getElementsByTagName("language").item(0).getTextContent());
+        String newXml = MDMXMLUtils.nodeToString(doc);
+        assertEquals("en", MDMXMLUtils.parseXml(newXml).getElementsByTagName("language").item(0).getTextContent());
     }
 
     public void testGetLanguages() throws Exception {
diff --git a/org.talend.mdm.webapp.journal/src/test/java/org/talend/mdm/webapp/journal/server/LocalLabelTransformerTest.java b/org.talend.mdm.webapp.journal/src/test/java/org/talend/mdm/webapp/journal/server/LocalLabelTransformerTest.java
index d54e409158..fc0463dff3 100644
--- a/org.talend.mdm.webapp.journal/src/test/java/org/talend/mdm/webapp/journal/server/LocalLabelTransformerTest.java
+++ b/org.talend.mdm.webapp.journal/src/test/java/org/talend/mdm/webapp/journal/server/LocalLabelTransformerTest.java
@@ -17,8 +17,8 @@
 import org.powermock.modules.junit3.PowerMockSuite;
 import org.talend.mdm.commmon.metadata.ComplexTypeMetadata;
 import org.talend.mdm.commmon.metadata.MetadataRepository;
+import org.talend.mdm.commmon.util.core.MDMXMLUtils;
 
-import com.amalto.commons.core.utils.XMLUtils;
 import com.amalto.core.save.DOMDocument;
 
 import junit.framework.TestCase;
@@ -62,7 +62,7 @@ public void testMultipleLanguageLabel() {
         String content = "<Product><Id>2</Id><Name>2-name</Name><Description>2</Description><Features><Sizes><Size>Medium</Size></Sizes><Colors><Color>Light Blue</Color></Colors></Features><Price>2.00</Price><Family>[1]</Family><Stores/></Product>";
 
         try {
-            document = new DOMDocument(XMLUtils.parse(content), typeMetadata, clusterName, modelName);
+            document = new DOMDocument(MDMXMLUtils.parseXml(content), typeMetadata, clusterName, modelName);
         } catch (Exception e) {
             fail("failed to create document");
         }
@@ -116,7 +116,7 @@ public void testMultipleLanguageLabel_ForRepeatableModel() {
         String content = "<Citizen><CitizenId>1</CitizenId><name>1</name><identity><type>1</type><nationality>[n1]</nationality></identity><identity><type>2</type><nationality>[n1]</nationality></identity><identity><type>3</type><nationality>[n1]</nationality></identity><aa><subelement>23</subelement><n3><subelement>23</subelement><name>23</name><n2>[n1]</n2></n3><n3><subelement>24</subelement><name>23</name><n2>[n1]</n2></n3></aa><aa><subelement>23</subelement><n3><subelement>23</subelement><name>25</name><n2>[n1]</n2></n3><n3><subelement>23</subelement><name>26</name><n2>[n1]</n2></n3></aa></Citizen>";
 
         try {
-            document = new DOMDocument(XMLUtils.parse(content), typeMetadata, clusterName, modelName);
+            document = new DOMDocument(MDMXMLUtils.parseXml(content), typeMetadata, clusterName, modelName);
         } catch (Exception e) {
             fail("failed to create document");
         }
@@ -185,7 +185,7 @@ public void testMultipleLanguageLabel_ForExtendedModel() {
         String content = "<Contract><id>3</id><comment>3</comment><detail xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"ContractDetailType\"><code>3</code></detail><detail xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"ContractDetailSubType\"><code>3</code><features><actor>3</actor><vendor>3</vendor><boolValue>true</boolValue></features><ReadOnlyEle>3</ReadOnlyEle></detail></Contract>";
 
         try {
-            document = new DOMDocument(XMLUtils.parse(content), typeMetadata, clusterName, modelName);
+            document = new DOMDocument(MDMXMLUtils.parseXml(content), typeMetadata, clusterName, modelName);
         } catch (Exception e) {
             fail("failed to create document");
         }
